{"version":3,"file":"static/js/606.f619ba39.chunk.js","mappings":"+QA2GA,UA3F4B,WAAqB,IAAD,MACxCA,GAAWC,EAAAA,EAAAA,MACjB,GAAyBC,EAAAA,EAAAA,MAAjBC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,SAENC,GAAUC,EAAAA,EAAAA,IAA+B,CAC7CC,KAAM,WACNC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,KAGtBC,EAIEN,EAJFM,MACAC,EAGEP,EAHFO,SACAC,EAEER,EAFFQ,aACaC,EACXT,EADFU,UAAaD,OAGf,GAAyCE,EAAAA,EAAAA,OAAjCC,KAAR,gBAAkC,GAAlC,GAAgBC,OAAAA,OAAhB,MAAyB,KAAzB,EACA,GAAyCC,EAAAA,EAAAA,KAAkB,CACzDC,UAAW,CAAEjB,GAAIC,GACjBiB,MAAOjB,IAFDa,KAAR,gBAAkC,GAAlC,GAAgBK,OAAAA,OAAhB,MAAyB,KAAzB,EAKA,GAAqBC,EAAAA,EAAAA,KAAsB,CACzCC,YAAa,kBAAMxB,EAAS,oBADvByB,GAAP,gBAIAC,EAAAA,EAAAA,YAAU,WACW,IAAD,EAAdvB,GAAMmB,GACRX,EAAM,CACJgB,KAAML,EAAOK,MAAQ,GACrBC,OAAO,UAAAN,EAAOM,aAAP,eAAczB,KAAM,GAC3B0B,YAAaP,EAAOO,aAAe,OAGtC,CAAC1B,EAAImB,EAAQX,IAehB,OACE,SAAC,MAAD,kBAAkBN,GAAlB,cACE,kBAAMyB,UAAU,YAAhB,WACE,UAAC,KAAD,CACEC,MAAM,aACNC,OAAQ5B,EACR0B,WAAWG,EAAAA,EAAAA,IAAOnB,EAAOa,MAAQ,yBAHnC,WAKE,SAAC,MAAD,gBACExB,GAAG,OACH+B,MAAM,YACFtB,EAAS,SAHf,IAIEuB,MAAK,UAAErB,EAAOa,YAAT,aAAE,EAAaS,QACpBN,UAAU,WAEZ,UAAC,MAAD,gBACE3B,GAAG,QACH+B,MAAM,UACFtB,EAAS,UAHf,IAIEuB,MAAK,UAAErB,EAAOc,aAAT,aAAE,EAAcQ,QAJvB,WAMId,IAAU,mBAAQe,MAAM,GAAd,uCANd,OAOGnB,QAPH,IAOGA,GAPH,UAOGA,EAAQoB,cAPX,aAOG,EAAgBC,KAAI,SAACX,GAAD,OACnB,mBAAwBS,OAAY,OAALT,QAAK,IAALA,OAAA,EAAAA,EAAOzB,KAAM,GAA5C,gBACGyB,QADH,IACGA,OADH,EACGA,EAAOD,MADV,OAAaC,QAAb,IAAaA,OAAb,EAAaA,EAAOzB,eAO1B,SAAC,KAAD,CACE4B,MAAM,eACND,WAAWG,EAAAA,EAAAA,IAAOnB,EAAOe,aAAe,yBAF1C,UAIE,SAAC,KAAD,OAGF,SAAC,KAAD,CAAaW,SAAU3B,GAlDZ,SAAC,GAAyD,IAAvDc,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,YAC/BJ,EAAW,CACTL,UAAW,CACTqB,QAAO,kBACDrC,GAAY,CAAED,GAAIC,IADlB,IAEJuB,KAAAA,EACAC,MAAO,CAAEzB,GAAIyB,GACbC,YAAAA,oB,oGCxDGa,EAAkBC,IAAAA,OAAW,CACxChB,KAAMgB,IAAAA,SAAaC,WAAWV,MAAM,QACpCL,YAAac,IAAAA,SAAaC,WAAWV,MAAM,iBAGhCxB,EAAwBiC,IAAAA,OAAW,CAC9ChB,KAAMgB,IAAAA,SAAaC,WAAWV,MAAM,QACpCN,MAAOe,IAAAA,SAAaC,WAAWV,MAAM,SACrCL,YAAac,IAAAA,SAAaC,WAAWV,MAAM","sources":["admin/pages/Group/GroupCourseFormPage.tsx","admin/validations/GroupForm.schema.ts"],"sourcesContent":["import { ReactElement, useEffect } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { joiResolver } from '@hookform/resolvers/joi';\r\nimport { Accordion, FormActions, InputField } from '../../components/molecules';\r\nimport { GroupCourseFormSchema } from '../../validations/GroupForm.schema';\r\nimport {\r\n  useGetCourseQuery,\r\n  useGetGroupsQuery,\r\n  useSaveCourseMutation,\r\n} from '../../../GraphQl/graphql';\r\nimport { Select } from '../../components/atoms';\r\nimport { DescriptionFrom } from '../../components/organisms';\r\nimport { twClsx } from '../../utils';\r\nimport { GroupCourseFormInputs } from './GroupForm.props';\r\n\r\nconst GroupCourseFormPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n  const { id, courseId } = useParams();\r\n\r\n  const methods = useForm<GroupCourseFormInputs>({\r\n    mode: 'onChange',\r\n    resolver: joiResolver(GroupCourseFormSchema),\r\n  });\r\n  const {\r\n    reset,\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const { data: { groups = null } = {} } = useGetGroupsQuery();\r\n  const { data: { course = null } = {} } = useGetCourseQuery({\r\n    variables: { id: courseId },\r\n    skip: !courseId,\r\n  });\r\n\r\n  const [saveCourse] = useSaveCourseMutation({\r\n    onCompleted: () => navigate('/admin/groups'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id && course) {\r\n      reset({\r\n        name: course.name || '',\r\n        group: course.group?.id || '',\r\n        description: course.description || '',\r\n      });\r\n    }\r\n  }, [id, course, reset]);\r\n\r\n  const onSubmit = ({ name, group, description }: GroupCourseFormInputs) => {\r\n    saveCourse({\r\n      variables: {\r\n        entity: {\r\n          ...(courseId && { id: courseId }),\r\n          name,\r\n          group: { id: group },\r\n          description,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form className=\"max-w-6xl\">\r\n        <Accordion\r\n          title=\"Stammdaten\"\r\n          open={!!courseId}\r\n          className={twClsx(errors.name && 'border border-primary')}\r\n        >\r\n          <InputField\r\n            id=\"name\"\r\n            label=\"Kursname\"\r\n            {...register('name')}\r\n            error={errors.name?.message}\r\n            className=\"mb-4\"\r\n          />\r\n          <Select\r\n            id=\"group\"\r\n            label=\"Gruppe\"\r\n            {...register('group')}\r\n            error={errors.group?.message}\r\n          >\r\n            {!course && <option value=\"\">WÃ¤hlen Sie eine Gruppe</option>}\r\n            {groups?.result?.map((group) => (\r\n              <option key={group?.id} value={group?.id || ''}>\r\n                {group?.name}\r\n              </option>\r\n            ))}\r\n          </Select>\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          title=\"Beschreibung\"\r\n          className={twClsx(errors.description && 'border border-primary')}\r\n        >\r\n          <DescriptionFrom />\r\n        </Accordion>\r\n\r\n        <FormActions onSubmit={handleSubmit(onSubmit)} />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default GroupCourseFormPage;\r\n","import Joi from 'joi';\r\n\r\nexport const GroupFormSchema = Joi.object({\r\n  name: Joi.string().required().label('Name'),\r\n  description: Joi.string().required().label('Description'),\r\n});\r\n\r\nexport const GroupCourseFormSchema = Joi.object({\r\n  name: Joi.string().required().label('Name'),\r\n  group: Joi.string().required().label('Group'),\r\n  description: Joi.string().required().label('Description'),\r\n});\r\n"],"names":["navigate","useNavigate","useParams","id","courseId","methods","useForm","mode","resolver","joiResolver","GroupCourseFormSchema","reset","register","handleSubmit","errors","formState","useGetGroupsQuery","data","groups","useGetCourseQuery","variables","skip","course","useSaveCourseMutation","onCompleted","saveCourse","useEffect","name","group","description","className","title","open","twClsx","label","error","message","value","result","map","onSubmit","entity","GroupFormSchema","Joi","required"],"sourceRoot":""}