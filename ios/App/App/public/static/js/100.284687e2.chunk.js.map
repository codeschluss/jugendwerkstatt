{"version":3,"file":"static/js/100.284687e2.chunk.js","mappings":"oQAiFA,UAhE6B,WAC3B,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,IAA6B,CAC3CC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,MAItBC,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,aACaC,EACXP,EADFQ,UAAaD,OAGDE,GAAkBC,EAAAA,EAAAA,KAAqB,CACnDC,UAAW,CAAEC,OAAQ,CAAEhB,GAAAA,IACvBiB,MAAOjB,IAFDkB,KAKR,GAA6BC,EAAAA,EAAAA,KAAyB,CACpDC,YAAa,kBAAMlB,EAAS,+BADvBmB,GAAP,eA0BA,OAXAC,EAAAA,EAAAA,YAAU,WACyB,IAAD,QAA3B,OAACT,QAAD,IAACA,GAAAA,EAAeU,WACnBd,EAAM,CACJe,MAAmB,OAAbX,QAAa,IAAbA,GAAA,UAAAA,EAAeU,iBAAf,eAA0BC,OAAQ,GACxCC,MAAmB,OAAbZ,QAAa,IAAbA,GAAA,UAAAA,EAAeU,iBAAf,eAA0BE,OAAQ,GACxCC,OAAoB,OAAbb,QAAa,IAAbA,GAAA,UAAAA,EAAeU,iBAAf,eAA0BG,QAAS,GAC1CC,SAAsB,OAAbd,QAAa,IAAbA,GAAA,UAAAA,EAAeU,iBAAf,eAA0BI,UAAW,OAGjD,CAACd,EAAeJ,KAGjB,SAAC,MAAD,kBAAkBL,GAAlB,cACE,kBAAMwB,UAAU,aAAhB,WACE,SAAC,KAAD,CACEC,MAAM,aACNC,OAAQ9B,EACR4B,WAAWG,EAAAA,EAAAA,KACRpB,EAAOc,MAAQd,EAAOe,OAASf,EAAOa,OACrC,yBALN,UAQE,SAAC,KAAD,OAEF,SAAC,KAAD,CAAaQ,SAAUtB,GAnCN,SAACQ,GAA+B,IAAD,EACpDG,EAAmB,CACjBN,UAAW,CACTC,QAAO,kBACFE,KACGL,GAAiB,CAAEb,GAAE,OAAEa,QAAF,IAAEA,GAAF,UAAEA,EAAeU,iBAAjB,aAAE,EAA0BvB","sources":["admin/pages/Events/CreateOrganizersPage.tsx"],"sourcesContent":["import { joiResolver } from '@hookform/resolvers/joi';\r\nimport { ReactElement, useEffect } from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n  useGetOrganizerQuery,\r\n  useSaveOrganizerMutation,\r\n} from '../../../GraphQl/graphql';\r\nimport { Accordion, FormActions } from '../../components/molecules';\r\nimport {\r\n  BaseOrganizerForm,\r\n  OrganizerFormInputs,\r\n} from '../../components/organisms';\r\nimport { twClsx } from '../../utils';\r\nimport { OrganizerFormSchema } from '../../validations';\r\n\r\nconst CreateOrganizersPage = (): ReactElement => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const methods = useForm<OrganizerFormInputs>({\r\n    resolver: joiResolver(OrganizerFormSchema),\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const { data: organizerData } = useGetOrganizerQuery({\r\n    variables: { entity: { id } },\r\n    skip: !id,\r\n  });\r\n\r\n  const [saveEventOrganizer] = useSaveOrganizerMutation({\r\n    onCompleted: () => navigate('/admin/events/organizers'),\r\n  });\r\n\r\n  const handleOnSubmit = (data: OrganizerFormInputs) => {\r\n    saveEventOrganizer({\r\n      variables: {\r\n        entity: {\r\n          ...data,\r\n          ...(!!organizerData && { id: organizerData?.organizer?.id }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!organizerData?.organizer) {\r\n      reset({\r\n        mail: organizerData?.organizer?.mail || '',\r\n        name: organizerData?.organizer?.name || '',\r\n        phone: organizerData?.organizer?.phone || '',\r\n        website: organizerData?.organizer?.website || '',\r\n      });\r\n    }\r\n  }, [organizerData, reset]);\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form className=\"min-h-full\">\r\n        <Accordion\r\n          title=\"Stammdaten\"\r\n          open={!!id}\r\n          className={twClsx(\r\n            (errors.name || errors.phone || errors.mail) &&\r\n              'border border-primary'\r\n          )}\r\n        >\r\n          <BaseOrganizerForm />\r\n        </Accordion>\r\n        <FormActions onSubmit={handleSubmit(handleOnSubmit)} />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default CreateOrganizersPage;\r\n"],"names":["id","useParams","navigate","useNavigate","methods","useForm","resolver","joiResolver","OrganizerFormSchema","reset","handleSubmit","errors","formState","organizerData","useGetOrganizerQuery","variables","entity","skip","data","useSaveOrganizerMutation","onCompleted","saveEventOrganizer","useEffect","organizer","mail","name","phone","website","className","title","open","twClsx","onSubmit"],"sourceRoot":""}