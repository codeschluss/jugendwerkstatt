{"version":3,"file":"static/js/388.643798d5.chunk.js","mappings":"8LAkBA,IACA,EADmBA,EAAAA,YAhBnB,SAA+BC,EAAOC,GACpC,OAAoBF,EAAAA,cAAoB,MAAOG,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,EACbC,OAAQ,eACR,cAAe,OACfC,IAAKR,GACJD,GAAqBD,EAAAA,cAAoB,OAAQ,CAClDW,cAAe,QACfC,eAAgB,QAChBC,EAAG,0D,oFCiEP,EApEkC,WAAqB,IAAD,EAC9CC,GAAWC,EAAAA,EAAAA,MACjB,GAAuDC,EAAAA,EAAAA,KACrD,CACEC,YAAa,sBAFjB,IAAQC,KAAR,gBAAuC,GAAvC,GAAgBC,YAAAA,OAAhB,MAA8B,KAA9B,EAA2CC,EAA3C,EAA2CA,QAK3C,GAA2BC,EAAAA,EAAAA,KAA4B,CACrDC,YAAa,kBAAMF,OADdG,GAAP,eAKMC,EAA4B,SAACC,GAAD,OAAgB,WAE5CC,QAAQ,oCACVH,EAAiB,CAAEI,UAAW,CAAEF,GAAAA,OAGpC,OACE,SAAC,aAAD,CACEG,OAAQ,CACNC,GAAI,qCACJC,MAAO,6BAHX,UAME,SAAC,KAAD,CACEC,WAAY,CACV,cACA,oBACA,gBACA,SACA,YAEFC,UACa,OAAXb,QAAW,IAAXA,GAAA,UAAAA,EAAac,cAAb,eAAqBC,KAAI,SAACC,GAAD,UAvBEV,EAuBF,OACvB,UAAC,SAAD,YACE,SAAC,UAAD,iBAAaU,QAAb,IAAaA,GAAb,UAAaA,EAAYC,YAAzB,aAAa,EAAkBC,YAC/B,SAAC,UAAD,WAAuB,OAAVF,QAAU,IAAVA,GAAA,UAAAA,EAAYG,qBAAZ,eAA2BC,OAAQ,OAChD,SAAC,UAAD,UACGC,GAAAA,CAAK,OAACL,QAAD,IAACA,OAAD,EAACA,EAAYM,SAASC,OAAO,iBAErC,SAAC,UAAD,WACE,gBAAKC,UAAU,4CAAf,SACyC,cAA5B,OAAVR,QAAU,IAAVA,GAAA,UAAAA,EAAYS,uBAAZ,eAA6BL,OAC5B,SAAC,KAAD,CAAMM,MAAM,SAAC,EAAD,OAEZ,SAAC,KAAD,CAAMA,MAAM,SAACC,EAAA,EAAD,CAAWH,UAAU,0BAIvC,SAAC,UAAD,WACE,iBAAKA,UAAU,sDAAf,WACE,SAAC,KAAD,CACEI,UA1CiBtB,GA0C6B,OAAVU,QAAU,IAAVA,OAAA,EAAAA,EAAYV,KAAM,GA1CtB,kBAAMX,EAASW,QA4CjD,SAAC,KAAD,CACEuB,SAAUxB,GAAoC,OAAVW,QAAU,IAAVA,OAAA,EAAAA,EAAYV,KAAM,aArB9D,OAAgBU,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAYV,SA0BxB","sources":["../node_modules/@heroicons/react/outline/esm/ExclamationCircleIcon.js","admin/pages/Evaluations/EvaluationsAssignmentsPage.tsx"],"sourcesContent":["import * as React from \"react\";\n\nfunction ExclamationCircleIcon(props, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 2,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    ref: svgRef\n  }, props), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n  }));\n}\n\nconst ForwardRef = React.forwardRef(ExclamationCircleIcon);\nexport default ForwardRef;","import { CheckIcon, ExclamationCircleIcon } from \"@heroicons/react/outline\";\r\nimport dayjs from \"dayjs\";\r\nimport { ReactElement } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  useDeleteAssignmentMutation,\r\n  useGetAssignmentsQuery,\r\n} from \"../../../GraphQl/graphql\";\r\nimport { Table, Action, Panel, Icon } from \"../../components/atoms\";\r\nimport { CustomTable } from \"../../components/molecules\";\r\n\r\nconst EvaluationsAssignmentPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n  const { data: { assignments = null } = {}, refetch } = useGetAssignmentsQuery(\r\n    {\r\n      fetchPolicy: \"cache-and-network\",\r\n    }\r\n  );\r\n  const [deleteAssignment] = useDeleteAssignmentMutation({\r\n    onCompleted: () => refetch(),\r\n  });\r\n\r\n  const handleQuestionnaireUpdate = (id: string) => () => navigate(id);\r\n  const handleQuestionnaireDelete = (id: string) => () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm(\"Möchten Sie dies löschen?\"))\r\n      deleteAssignment({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Panel.Wrapper\r\n      action={{\r\n        to: \"/admin/evaluations/assignments/new\",\r\n        label: \"Zuordnungen hinzufügen\",\r\n      }}\r\n    >\r\n      <CustomTable\r\n        headerData={[\r\n          \"Benutzer/in\",\r\n          \"Evaluierungsbogen\",\r\n          \"Ausgegeben am\",\r\n          \"Status\",\r\n          \"Aktionen\",\r\n        ]}\r\n        bodyData={\r\n          assignments?.result?.map((assignment) => (\r\n            <Table.Row key={assignment?.id}>\r\n              <Table.Data>{assignment?.user?.fullname}</Table.Data>\r\n              <Table.Data>{assignment?.questionnaire?.name || \"/\"}</Table.Data>\r\n              <Table.Data>\r\n                {dayjs(assignment?.created).format(\"DD.MM.YYYY\")}\r\n              </Table.Data>\r\n              <Table.Data>\r\n                <div className=\"flex flex-row items-center justify-center\">\r\n                  {assignment?.assignmentState?.name === \"ASSIGNED\" ? (\r\n                    <Icon icon={<ExclamationCircleIcon />} />\r\n                  ) : (\r\n                    <Icon icon={<CheckIcon className=\"text-green-500\" />} />\r\n                  )}\r\n                </div>\r\n              </Table.Data>\r\n              <Table.Data>\r\n                <div className=\"flex flex-row items-center justify-center space-x-2\">\r\n                  <Action\r\n                    onUpdate={handleQuestionnaireUpdate(assignment?.id || \"\")}\r\n                  />\r\n                  <Action\r\n                    onDelete={handleQuestionnaireDelete(assignment?.id || \"\")}\r\n                  />\r\n                </div>\r\n              </Table.Data>\r\n            </Table.Row>\r\n          )) || []\r\n        }\r\n      />\r\n    </Panel.Wrapper>\r\n  );\r\n};\r\n\r\nexport default EvaluationsAssignmentPage;\r\n"],"names":["React","props","svgRef","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d","navigate","useNavigate","useGetAssignmentsQuery","fetchPolicy","data","assignments","refetch","useDeleteAssignmentMutation","onCompleted","deleteAssignment","handleQuestionnaireDelete","id","confirm","variables","action","to","label","headerData","bodyData","result","map","assignment","user","fullname","questionnaire","name","dayjs","created","format","className","assignmentState","icon","CheckIcon","onUpdate","onDelete"],"sourceRoot":""}