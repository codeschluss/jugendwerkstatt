{"version":3,"file":"static/js/27.73a1bc5c.chunk.js","mappings":"kMA4DA,UAnDiC,WAAqB,IAAD,EAC7CA,GAAWC,EAAAA,EAAAA,MAEjB,GAAwDC,EAAAA,EAAAA,KAAqB,CAC3EC,YAAa,sBADf,IAAQC,KAAR,gBAAwC,GAAxC,GAAgBC,aAAAA,OAAhB,MAA+B,KAA/B,EAA4CC,EAA5C,EAA4CA,QAI5C,GAAwBC,EAAAA,EAAAA,KAAyB,CAC/CC,YAAa,kBAAMF,OADdG,GAAP,eAIMC,EAAmB,SAACC,GAAD,OAAgB,WAEnCC,QAAQ,oCACVH,EAAc,CAAEI,UAAW,CAAEF,GAAAA,OAMjC,OACE,SAAC,aAAD,CACEG,OAAQ,CACNC,GAAI,yCACJC,MAAO,mCAHX,UAME,SAAC,KAAD,CACEC,WAAY,CAAC,cAAe,iBAAkB,UAAW,YACzDC,UACc,OAAZb,QAAY,IAAZA,GAAA,UAAAA,EAAcc,cAAd,eAAsBC,KAAI,SAACC,GAAD,YAZRV,EAYQ,OACxB,UAAC,SAAD,YACE,SAAC,UAAD,iBAAaU,QAAb,IAAaA,OAAb,EAAaA,EAAMC,QACnB,SAAC,UAAD,iBAAaD,QAAb,IAAaA,OAAb,EAAaA,EAAME,QACnB,SAAC,UAAD,2BACMF,QADN,IACMA,GADN,UACMA,EAAMG,eADZ,aACM,EAAeC,OADrB,mBAC+BJ,QAD/B,IAC+BA,GAD/B,UAC+BA,EAAMG,eADrC,aAC+B,EAAeE,YAD9C,oBAC8DL,QAD9D,IAC8DA,GAD9D,UAC8DA,EAAMG,eADpE,aAC8D,EAAeG,MAD7E,mBACsFN,QADtF,IACsFA,GADtF,UACsFA,EAAMG,eAD5F,aACsF,EAAeI,eAErG,SAAC,UAAD,WACE,SAAC,KAAD,CACEC,UArBUlB,GAqBqB,OAAJU,QAAI,IAAJA,OAAA,EAAAA,EAAMV,KAAM,GArBd,kBAAMX,EAASW,KAsBxCmB,SAAUpB,GAAqB,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMV,KAAM,UAT7C,OAAgBU,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMV,SAalB","sources":["admin/pages/Vacancy/VacancyCompaniesListPage.tsx"],"sourcesContent":["import { ReactElement } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {\r\n  useDeleteCompanyMutation,\r\n  useGetCompaniesQuery,\r\n} from \"../../../GraphQl/graphql\";\r\nimport { Table, Action, Panel } from \"../../components/atoms\";\r\nimport { CustomTable } from \"../../components/molecules\";\r\n\r\nconst VacancyCompaniesListPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n\r\n  const { data: { getCompanies = null } = {}, refetch } = useGetCompaniesQuery({\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [deleteCompany] = useDeleteCompanyMutation({\r\n    onCompleted: () => refetch(),\r\n  });\r\n\r\n  const handleDeleteById = (id: string) => () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm(\"Möchten Sie dies löschen?\")) {\r\n      deleteCompany({ variables: { id } });\r\n    }\r\n  };\r\n\r\n  const handleUpdateById = (id: string) => () => navigate(id);\r\n\r\n  return (\r\n    <Panel.Wrapper\r\n      action={{\r\n        to: \"/admin/job-announcements/companies/new\",\r\n        label: \"Neues Unternehmen hinzufügen\",\r\n      }}\r\n    >\r\n      <CustomTable\r\n        headerData={[\"Unternehmen\", \"E-Mail-Adresse\", \"Adresse\", \"Aktionen\"]}\r\n        bodyData={\r\n          getCompanies?.result?.map((item) => (\r\n            <Table.Row key={item?.id}>\r\n              <Table.Data>{item?.name}</Table.Data>\r\n              <Table.Data>{item?.mail}</Table.Data>\r\n              <Table.Data>\r\n                {`${item?.address?.street} ${item?.address?.houseNumber}, ${item?.address?.place} ${item?.address?.postalCode}`}\r\n              </Table.Data>\r\n              <Table.Data>\r\n                <Action\r\n                  onUpdate={handleUpdateById(item?.id || \"\")}\r\n                  onDelete={handleDeleteById(item?.id || \"\")}\r\n                />\r\n              </Table.Data>\r\n            </Table.Row>\r\n          )) || []\r\n        }\r\n      />\r\n    </Panel.Wrapper>\r\n  );\r\n};\r\n\r\nexport default VacancyCompaniesListPage;\r\n"],"names":["navigate","useNavigate","useGetCompaniesQuery","fetchPolicy","data","getCompanies","refetch","useDeleteCompanyMutation","onCompleted","deleteCompany","handleDeleteById","id","confirm","variables","action","to","label","headerData","bodyData","result","map","item","name","mail","address","street","houseNumber","place","postalCode","onUpdate","onDelete"],"sourceRoot":""}