{"version":3,"file":"static/js/286.dff9589f.chunk.js","mappings":"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","sources":["admin/validations/EvaluationAssignmentForm.schema.ts","admin/pages/Evaluations/CreateEvaluationAssignmentPage.tsx"],"sourcesContent":["import Joi from 'joi';\r\n\r\nexport const EvaluationAssignmentFormSchema = Joi.object({\r\n  userId: Joi.string().required().label('Benutzer/in'),\r\n  evaluationQuestionId: Joi.string().required().label('Evaluierungsbogen'),\r\n});\r\n","import { joiResolver } from '@hookform/resolvers/joi';\r\nimport { ReactElement, useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport {\r\n  QueryOperator,\r\n  useGetAssignmentQuery,\r\n  useGetQuestionnairesQuery,\r\n  useGetUsersAdminQuery,\r\n  useSaveAssignmentMutation,\r\n} from '../../../GraphQl/graphql';\r\nimport { Select } from '../../components/atoms';\r\nimport { Accordion, FormActions } from '../../components/molecules';\r\nimport { twClsx } from '../../utils';\r\nimport { EvaluationAssignmentFormSchema } from '../../validations/EvaluationAssignmentForm.schema';\r\nimport { EvaluationFormInputs } from './EvaluationForm.props';\r\n\r\nconst CreateEvaluationAssignmentPage = (): ReactElement => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { data: { assignment = null } = {}, loading } = useGetAssignmentQuery({\r\n    skip: !id,\r\n    variables: { entity: { id } },\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n  const { data: { users = null } = {} } = useGetUsersAdminQuery({\r\n    variables: {\r\n      params: {\r\n        expression: {\r\n          entity: {\r\n            operator: QueryOperator.Equal,\r\n            path: 'approved',\r\n            value: 'true',\r\n          },\r\n        },\r\n      },\r\n    },\r\n  });\r\n  const { data: { questionnaires = null } = {} } = useGetQuestionnairesQuery();\r\n  const [saveAssignment] = useSaveAssignmentMutation({\r\n    onCompleted: () => navigate('/admin/evaluations/assignments'),\r\n  });\r\n\r\n  const {\r\n    register,\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<EvaluationFormInputs>({\r\n    resolver: joiResolver(EvaluationAssignmentFormSchema),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id && assignment) {\r\n      reset({\r\n        userId: assignment.user?.id || '',\r\n        evaluationQuestionId: assignment.questionnaire?.id || '',\r\n      });\r\n    }\r\n  }, [assignment, id, reset]);\r\n\r\n  const onSubmit = ({ userId, evaluationQuestionId }: EvaluationFormInputs) => {\r\n    saveAssignment({\r\n      variables: {\r\n        entity: {\r\n          ...(id && { id }),\r\n          user: { id: userId },\r\n          questionnaire: { id: evaluationQuestionId },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  if (loading) return <h1>Loading...</h1>;\r\n\r\n  return (\r\n    <form className=\"min-h-full\">\r\n      <Accordion\r\n        title=\"Stammdaten\"\r\n        open={!!id}\r\n        className={twClsx(\r\n          (errors.userId || errors.evaluationQuestionId) &&\r\n            'border border-primary'\r\n        )}\r\n      >\r\n        <div className=\"space-y-6\">\r\n          <div>\r\n            <Select id=\"user\" label=\"Benutzer/in\" {...register('userId')}>\r\n              {!assignment && (\r\n                <option value=\"\">Wählen Sie einen Benutzer aus</option>\r\n              )}\r\n              {users?.result?.map((user) => (\r\n                <option key={user?.id} value={user?.id || ''}>\r\n                  {user?.fullname}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n            {errors.userId && (\r\n              <p className=\"text-primary\">{errors.userId.message}</p>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <Select\r\n              label=\"Evaluierungsbogen\"\r\n              {...register('evaluationQuestionId')}\r\n              placeholder=\"Choose an Option\"\r\n            >\r\n              {!assignment && (\r\n                <option value=\"\">Wählen Sie eine Bewertung aus</option>\r\n              )}\r\n              {questionnaires?.result?.map((questionnaire) => (\r\n                <option key={questionnaire?.id} value={questionnaire?.id || ''}>\r\n                  {questionnaire?.name}\r\n                </option>\r\n              ))}\r\n            </Select>\r\n            {errors.evaluationQuestionId && (\r\n              <p className=\"text-primary\">\r\n                {errors.evaluationQuestionId.message}\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </Accordion>\r\n      <FormActions onSubmit={handleSubmit(onSubmit)} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default CreateEvaluationAssignmentPage;\r\n"],"names":["EvaluationAssignmentFormSchema","Joi","userId","required","label","evaluationQuestionId","id","useParams","navigate","useNavigate","useGetAssignmentQuery","skip","variables","entity","fetchPolicy","data","assignment","loading","useGetUsersAdminQuery","params","expression","operator","QueryOperator","path","value","users","useGetQuestionnairesQuery","questionnaires","useSaveAssignmentMutation","onCompleted","saveAssignment","useForm","resolver","joiResolver","register","reset","handleSubmit","errors","formState","useEffect","user","questionnaire","className","title","open","twClsx","result","map","fullname","message","placeholder","name","onSubmit"],"sourceRoot":""}