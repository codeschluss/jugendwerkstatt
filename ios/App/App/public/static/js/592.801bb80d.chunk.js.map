{"version":3,"file":"static/js/592.801bb80d.chunk.js","mappings":"oQAwFA,UAvEwB,WACtB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,IAAyB,CACvCC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,MAItBC,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,aACaC,EACXP,EADFQ,UAAaD,OAGf,GAA8CE,EAAAA,EAAAA,KAAyB,CACrEC,UAAW,CAAEC,OAAQ,CAAEf,GAAAA,IACvBgB,MAAOhB,IAFDiB,KAAR,gBAAuC,GAAvC,GAAgBC,YAAAA,OAAhB,MAA8B,KAA9B,EAKA,GAAuBC,EAAAA,EAAAA,KAA6B,CAClDC,YAAa,kBAAMlB,EAAS,6BADvBmB,GAAP,eA8BA,OAZAC,EAAAA,EAAAA,YAAU,WACY,IAAD,EAAbJ,GACJT,EAAM,CACJc,SAAU,CACRC,MAAiB,OAAXN,QAAW,IAAXA,OAAA,EAAAA,EAAaM,OAAQ,GAC3BC,UAAqB,OAAXP,QAAW,IAAXA,GAAA,UAAAA,EAAaQ,oBAAb,eAA2B1B,KAAM,IAE7C2B,aAAwB,OAAXT,QAAW,IAAXA,OAAA,EAAAA,EAAaU,UAAW,OAGxC,CAACV,EAAaT,KAGf,SAAC,MAAD,kBAAkBL,GAAlB,cACE,kBAAMyB,UAAU,aAAhB,WACE,SAAC,KAAD,CACEC,MAAM,aACNC,OAAQ/B,EACR6B,WAAWG,EAAAA,EAAAA,IAAOrB,EAAOY,UAAY,yBAHvC,UAKE,SAAC,KAAD,OAEF,SAAC,KAAD,CACEO,MAAM,eACND,WAAWG,EAAAA,EAAAA,IAAOrB,EAAOgB,aAAe,yBAF1C,UAIE,SAAC,KAAD,OAEF,SAAC,KAAD,CAAaM,SAAUvB,GA1CN,SAAC,GAGA,IAFtBiB,EAEqB,EAFrBA,YAEqB,IADrBJ,SAAYC,EACS,EADTA,KAAMC,EACG,EADHA,SAElBJ,GACEa,EAAAA,EAAAA,KAAO,QACLV,KAAAA,EACAI,QAASD,EACTD,aAAc,CAAE1B,GAAIyB,MACdP,GAAe,CAAElB,GAAE,OAAEkB,QAAF,IAAEA,OAAF,EAAEA,EAAalB","sources":["admin/pages/Forms/CreateFormsPage.tsx"],"sourcesContent":["import { joiResolver } from '@hookform/resolvers/joi';\r\nimport { ReactElement, useEffect } from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  useGetTemplateAdminQuery,\r\n  useSaveTemplateAdminMutation,\r\n} from '../../../GraphQl/graphql';\r\nimport { Accordion, FormActions } from '../../components/molecules';\r\nimport {\r\n  DescriptionFrom,\r\n  FormsBaseForm,\r\n  FormsFormInputs,\r\n} from '../../components/organisms';\r\nimport { gqlVar, twClsx } from '../../utils';\r\nimport { FormsFormSchema } from '../../validations';\r\n\r\nconst CreateFormsPage = (): ReactElement => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const methods = useForm<FormsFormInputs>({\r\n    resolver: joiResolver(FormsFormSchema),\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const { data: { getTemplate = null } = {} } = useGetTemplateAdminQuery({\r\n    variables: { entity: { id } },\r\n    skip: !id,\r\n  });\r\n\r\n  const [saveTemplate] = useSaveTemplateAdminMutation({\r\n    onCompleted: () => navigate('/admin/forms/templates'),\r\n  });\r\n\r\n  const handleOnSubmit = ({\r\n    description,\r\n    baseData: { name, category },\r\n  }: FormsFormInputs) => {\r\n    saveTemplate(\r\n      gqlVar({\r\n        name,\r\n        content: description,\r\n        templateType: { id: category },\r\n        ...(!!getTemplate && { id: getTemplate?.id }),\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!getTemplate) {\r\n      reset({\r\n        baseData: {\r\n          name: getTemplate?.name || '',\r\n          category: getTemplate?.templateType?.id || '',\r\n        },\r\n        description: getTemplate?.content || '',\r\n      });\r\n    }\r\n  }, [getTemplate, reset]);\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form className=\"min-h-full\">\r\n        <Accordion\r\n          title=\"Stammdaten\"\r\n          open={!!id}\r\n          className={twClsx(errors.baseData && 'border border-primary')}\r\n        >\r\n          <FormsBaseForm />\r\n        </Accordion>\r\n        <Accordion\r\n          title=\"Beschreibung\"\r\n          className={twClsx(errors.description && 'border border-primary')}\r\n        >\r\n          <DescriptionFrom />\r\n        </Accordion>\r\n        <FormActions onSubmit={handleSubmit(handleOnSubmit)} />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default CreateFormsPage;\r\n"],"names":["id","useParams","navigate","useNavigate","methods","useForm","resolver","joiResolver","FormsFormSchema","reset","handleSubmit","errors","formState","useGetTemplateAdminQuery","variables","entity","skip","data","getTemplate","useSaveTemplateAdminMutation","onCompleted","saveTemplate","useEffect","baseData","name","category","templateType","description","content","className","title","open","twClsx","onSubmit","gqlVar"],"sourceRoot":""}