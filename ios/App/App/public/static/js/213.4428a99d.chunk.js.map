{"version":3,"file":"static/js/213.4428a99d.chunk.js","mappings":"oQAyFA,UAvEsB,WAAqB,IAAD,EAClCA,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GAEFE,GAAUC,EAAAA,EAAAA,IAAyB,CACvCC,KAAM,WACNC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,KAGtBC,EAIEN,EAJFM,MACAC,EAGEP,EAHFO,SACAC,EAEER,EAFFQ,aACaC,EACXT,EADFU,UAAaD,OAGf,GAAwCE,EAAAA,EAAAA,KAAiB,CACvDC,UAAW,CAAEC,OAAQ,CAAEf,GAAAA,IACvBgB,MAAOhB,IAFDiB,KAAR,gBAAiC,GAAjC,GAAgBC,MAAAA,OAAhB,MAAwB,KAAxB,EAIA,GAAoBC,EAAAA,EAAAA,KAAqB,CACvCC,YAAa,kBAAMtB,EAAS,oBADvBuB,GAAP,gBAIAC,EAAAA,EAAAA,YAAU,WACJtB,GAAMkB,GACRV,EAAM,CACJe,KAAML,EAAMK,MAAQ,GACpBC,YAAaN,EAAMM,aAAe,OAErC,CAACxB,EAAIkB,EAAOV,IAaf,OACE,SAAC,MAAD,kBAAkBN,GAAlB,cACE,kBAAMuB,UAAU,YAAhB,WACE,SAAC,KAAD,CACEC,MAAM,aACNC,OAAQ3B,EACRyB,WAAWG,EAAAA,EAAAA,IAAOjB,EAAOY,MAAQ,yBAHnC,UAKE,SAAC,MAAD,gBACEvB,GAAG,OACH6B,MAAM,eACFpB,EAAS,SAHf,IAIEqB,MAAK,UAAEnB,EAAOY,YAAT,aAAE,EAAaQ,cAIxB,SAAC,KAAD,CACEL,MAAM,eACND,WAAWG,EAAAA,EAAAA,IAAOjB,EAAOa,aAAe,yBAF1C,UAIE,SAAC,KAAD,OAGF,SAAC,KAAD,CAAaQ,SAAUtB,GAlCZ,SAAC,GAAD,IAAGa,EAAH,EAAGA,KAAMC,EAAT,EAASA,YAAT,OACfH,EAAU,CACRP,UAAW,CACTC,QAAO,kBACDf,GAAM,CAAEA,GAAAA,IADR,IAEJuB,KAAAA,EACAC,YAAAA,oB,oGCrDGjB,EAAkB0B,IAAAA,OAAW,CACxCV,KAAMU,IAAAA,SAAaC,WAAWL,MAAM,QACpCL,YAAaS,IAAAA,SAAaC,WAAWL,MAAM,iBAGhCM,EAAwBF,IAAAA,OAAW,CAC9CV,KAAMU,IAAAA,SAAaC,WAAWL,MAAM,QACpCX,MAAOe,IAAAA,SAAaC,WAAWL,MAAM,SACrCL,YAAaS,IAAAA,SAAaC,WAAWL,MAAM","sources":["admin/pages/Group/GroupFormPage.tsx","admin/validations/GroupForm.schema.ts"],"sourcesContent":["import { ReactElement, useEffect } from 'react';\r\nimport { FieldError, FormProvider, useForm } from 'react-hook-form';\r\nimport { joiResolver } from '@hookform/resolvers/joi';\r\nimport { Accordion, FormActions, InputField } from '../../components/molecules';\r\nimport { GroupFormSchema } from '../../validations/GroupForm.schema';\r\nimport {\r\n  useGetGroupQuery,\r\n  useSaveGroupMutation,\r\n} from '../../../GraphQl/graphql';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  DescriptionFrom,\r\n  GroupCoursesForm,\r\n  GroupCoursesInput,\r\n} from '../../components/organisms';\r\nimport { twClsx } from '../../utils';\r\nimport { GroupFormInputs } from './GroupForm.props';\r\n\r\nconst GroupFormPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const methods = useForm<GroupFormInputs>({\r\n    mode: 'onChange',\r\n    resolver: joiResolver(GroupFormSchema),\r\n  });\r\n  const {\r\n    reset,\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const { data: { group = null } = {} } = useGetGroupQuery({\r\n    variables: { entity: { id } },\r\n    skip: !id,\r\n  });\r\n  const [saveGroup] = useSaveGroupMutation({\r\n    onCompleted: () => navigate('/admin/groups'),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (id && group)\r\n      reset({\r\n        name: group.name || '',\r\n        description: group.description || '',\r\n      });\r\n  }, [id, group, reset]);\r\n\r\n  const onSubmit = ({ name, description }: GroupFormInputs) =>\r\n    saveGroup({\r\n      variables: {\r\n        entity: {\r\n          ...(id && { id }),\r\n          name,\r\n          description,\r\n        },\r\n      },\r\n    });\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form className=\"max-w-6xl\">\r\n        <Accordion\r\n          title=\"Stammdaten\"\r\n          open={!!id}\r\n          className={twClsx(errors.name && 'border border-primary')}\r\n        >\r\n          <InputField\r\n            id=\"name\"\r\n            label=\"Gruppenname\"\r\n            {...register('name')}\r\n            error={errors.name?.message}\r\n          />\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          title=\"Beschreibung\"\r\n          className={twClsx(errors.description && 'border border-primary')}\r\n        >\r\n          <DescriptionFrom />\r\n        </Accordion>\r\n\r\n        <FormActions onSubmit={handleSubmit(onSubmit)} />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default GroupFormPage;\r\n","import Joi from 'joi';\r\n\r\nexport const GroupFormSchema = Joi.object({\r\n  name: Joi.string().required().label('Name'),\r\n  description: Joi.string().required().label('Description'),\r\n});\r\n\r\nexport const GroupCourseFormSchema = Joi.object({\r\n  name: Joi.string().required().label('Name'),\r\n  group: Joi.string().required().label('Group'),\r\n  description: Joi.string().required().label('Description'),\r\n});\r\n"],"names":["navigate","useNavigate","id","useParams","methods","useForm","mode","resolver","joiResolver","GroupFormSchema","reset","register","handleSubmit","errors","formState","useGetGroupQuery","variables","entity","skip","data","group","useSaveGroupMutation","onCompleted","saveGroup","useEffect","name","description","className","title","open","twClsx","label","error","message","onSubmit","Joi","required","GroupCourseFormSchema"],"sourceRoot":""}