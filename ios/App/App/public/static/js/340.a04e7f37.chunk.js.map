{"version":3,"file":"static/js/340.a04e7f37.chunk.js","mappings":"mMA4DA,UAnD2B,WAAqB,IAAD,EACvCA,GAAWC,EAAAA,EAAAA,MACjB,GAAqDC,EAAAA,EAAAA,OAArD,IAAQC,KAAR,gBAAqC,GAArC,GAAgBC,UAAAA,OAAhB,MAA4B,KAA5B,EAAyCC,EAAzC,EAAyCA,QACzC,GAAwBC,EAAAA,EAAAA,KAAyB,CAC/CC,YAAa,kBAAMF,OADdG,GAAP,eAIMC,EAAsB,SAACC,GAAD,OAAgB,WAEtCC,QAAQ,oCACVH,EAAc,CAAEI,UAAW,CAAEF,GAAAA,OAIjC,OACE,SAAC,aAAD,WACE,SAAC,KAAD,CACEG,WAAY,CACV,YACA,aACA,eACA,QACA,gBACA,cACA,YAEFC,SACGV,IAAS,UACRA,EAAUW,cADF,aACR,EAAkBC,KAAI,SAACC,GAAD,OACpB,UAAC,SAAD,YACE,SAAC,UAAD,iBAAaA,QAAb,IAAaA,OAAb,EAAaA,EAASC,UACtB,SAAC,UAAD,iBAAaD,QAAb,IAAaA,OAAb,EAAaA,EAASE,eACtB,SAAC,UAAD,iBAAaF,QAAb,IAAaA,OAAb,EAAaA,EAASG,cACtB,SAAC,UAAD,iBAAaH,QAAb,IAAaA,OAAb,EAAaA,EAASI,SACtB,SAAC,UAAD,iBAAaJ,QAAb,IAAaA,OAAb,EAAaA,EAASK,aACtB,SAAC,UAAD,iBAAaL,QAAb,IAAaA,OAAb,EAAaA,EAASM,YACtB,SAAC,UAAD,WACE,SAAC,KAAD,CACEC,UA1BWd,GA0B0B,OAAPO,QAAO,IAAPA,OAAA,EAAAA,EAASP,KAAM,GA1BnB,kBAAMV,EAASU,KA2BzCe,SAAUhB,GAA2B,OAAPQ,QAAO,IAAPA,OAAA,EAAAA,EAASP,KAAM,UAVnD,OAAgBO,QAAhB,IAAgBA,OAAhB,EAAgBA,EAASP,IAjBT,IAACA,OAgCrB","sources":["admin/pages/GeneralSettings/GeneralAddressPage.tsx"],"sourcesContent":["import { ReactElement } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  useDeleteAddressMutation,\r\n  useGetAddressesQuery,\r\n} from '../../../GraphQl/graphql';\r\nimport { Action, Panel, Table } from '../../components/atoms';\r\nimport { CustomTable } from '../../components/molecules';\r\n\r\nconst GeneralAddressPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n  const { data: { addresses = null } = {}, refetch } = useGetAddressesQuery();\r\n  const [deleteAddress] = useDeleteAddressMutation({\r\n    onCompleted: () => refetch(),\r\n  });\r\n\r\n  const handleDeleteAddress = (id: string) => () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Möchten Sie dies löschen?'))\r\n      deleteAddress({ variables: { id } });\r\n  };\r\n  const handleUpdateAddress = (id: string) => () => navigate(id);\r\n\r\n  return (\r\n    <Panel.Wrapper>\r\n      <CustomTable\r\n        headerData={[\r\n          'Straße',\r\n          'Hausnummer',\r\n          'Postleitzahl',\r\n          'Stadt',\r\n          'Längengrad',\r\n          'Breitengrad',\r\n          'Aktionen',\r\n        ]}\r\n        bodyData={\r\n          (addresses &&\r\n            addresses.result?.map((address) => (\r\n              <Table.Row key={address?.id}>\r\n                <Table.Data>{address?.street}</Table.Data>\r\n                <Table.Data>{address?.houseNumber}</Table.Data>\r\n                <Table.Data>{address?.postalCode}</Table.Data>\r\n                <Table.Data>{address?.place}</Table.Data>\r\n                <Table.Data>{address?.longitude}</Table.Data>\r\n                <Table.Data>{address?.latitude}</Table.Data>\r\n                <Table.Data>\r\n                  <Action\r\n                    onUpdate={handleUpdateAddress(address?.id || '')}\r\n                    onDelete={handleDeleteAddress(address?.id || '')}\r\n                  />\r\n                </Table.Data>\r\n              </Table.Row>\r\n            ))) ||\r\n          []\r\n        }\r\n      />\r\n    </Panel.Wrapper>\r\n  );\r\n};\r\n\r\nexport default GeneralAddressPage;\r\n"],"names":["navigate","useNavigate","useGetAddressesQuery","data","addresses","refetch","useDeleteAddressMutation","onCompleted","deleteAddress","handleDeleteAddress","id","confirm","variables","headerData","bodyData","result","map","address","street","houseNumber","postalCode","place","longitude","latitude","onUpdate","onDelete"],"sourceRoot":""}