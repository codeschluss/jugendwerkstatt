{"version":3,"file":"static/js/421.928c559f.chunk.js","mappings":"mMAkDA,UAzCwB,WACtB,IAAMA,GAAWC,EAAAA,EAAAA,MACjB,GAAiDC,EAAAA,EAAAA,KAAiB,CAChEC,YAAa,sBADf,IAAQC,KAAR,gBAAiC,GAAjC,GAAgBC,MAAAA,OAAhB,MAAwB,KAAxB,EAAqCC,EAArC,EAAqCA,QAGrC,GAAqBC,EAAAA,EAAAA,KAAsB,CAAEC,YAAa,kBAAMF,OAAzDG,GAAP,eAEMC,EAAmB,SAACC,GAAD,OAAgB,WAEnCC,QAAQ,oCAA8BH,EAAW,CAAEI,UAAW,CAAEF,GAAAA,OAGtE,OACE,SAAC,aAAD,CACEG,OAAQ,CACNC,GAAI,2CACJC,MAAO,4BAHX,UAME,SAAC,KAAD,CACEC,WAAY,CAAC,uBAAqB,YAClCC,UACQ,OAALb,QAAK,IAALA,OAAA,EAAAA,EAAOc,SACNd,EAAMc,OAAOC,KAAI,SAACC,GAAD,OACf,UAAC,SAAD,YACE,SAAC,UAAD,WAAiB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMC,OAAQ,OAC3B,SAAC,UAAD,WACE,SAAC,KAAD,CACEC,UAtBQZ,GAsBuB,OAAJU,QAAI,IAAJA,OAAA,EAAAA,EAAMV,KAAM,GAtBhB,kBAAMX,EAASW,KAuBtCa,SAAUd,GAAqB,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMV,KAAM,UAL7C,OAAgBU,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMV,IAlBT,IAACA,MA4BlB","sources":["admin/pages/GeneralSettings/PublicPagesPage.tsx"],"sourcesContent":["import { ReactElement } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  useDeletePageMutation,\r\n  useGetPagesQuery,\r\n} from '../../../GraphQl/graphql';\r\nimport { Action, Panel, Table } from '../../components/atoms';\r\nimport { CustomTable } from '../../components/molecules';\r\n\r\nconst PublicPagesPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n  const { data: { pages = null } = {}, refetch } = useGetPagesQuery({\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n  const [deletePage] = useDeletePageMutation({ onCompleted: () => refetch() });\r\n  const handleUpdatePage = (id: string) => () => navigate(id);\r\n  const handleDeletePage = (id: string) => () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Möchten Sie dies löschen?')) deletePage({ variables: { id } });\r\n  };\r\n\r\n  return (\r\n    <Panel.Wrapper\r\n      action={{\r\n        to: '/admin/general-settings/public-pages/new',\r\n        label: 'Neue Seite hinzufügen',\r\n      }}\r\n    >\r\n      <CustomTable\r\n        headerData={['Öffentliche Seite', 'Aktionen']}\r\n        bodyData={\r\n          (pages?.result &&\r\n            pages.result.map((page) => (\r\n              <Table.Row key={page?.id}>\r\n                <Table.Data>{page?.name || '/'}</Table.Data>\r\n                <Table.Data>\r\n                  <Action\r\n                    onUpdate={handleUpdatePage(page?.id || '')}\r\n                    onDelete={handleDeletePage(page?.id || '')}\r\n                  />\r\n                </Table.Data>\r\n              </Table.Row>\r\n            ))) ||\r\n          []\r\n        }\r\n      />\r\n    </Panel.Wrapper>\r\n  );\r\n};\r\n\r\nexport default PublicPagesPage;\r\n"],"names":["navigate","useNavigate","useGetPagesQuery","fetchPolicy","data","pages","refetch","useDeletePageMutation","onCompleted","deletePage","handleDeletePage","id","confirm","variables","action","to","label","headerData","bodyData","result","map","page","name","onUpdate","onDelete"],"sourceRoot":""}