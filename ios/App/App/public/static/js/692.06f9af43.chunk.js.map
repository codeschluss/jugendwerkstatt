{"version":3,"file":"static/js/692.06f9af43.chunk.js","mappings":"oQAyEA,UA9DwB,WACtB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,IAAyB,CACvCC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,KAItBC,EAGEL,EAHFK,MACAC,EAEEN,EAFFM,aACaC,EACXP,EADFQ,UAAaD,OAGf,GAA0CE,EAAAA,EAAAA,KAAgB,CACxDC,UAAW,CAAEC,OAAQ,CAAEf,GAAAA,IACvBgB,MAAOhB,IAFDiB,KAAR,gBAAmC,GAAnC,GAAgBC,QAAAA,OAAhB,MAA0B,KAA1B,EAKA,GAAmBC,EAAAA,EAAAA,KAAoB,CACrCC,YAAa,kBAAMlB,EAAS,oBADvBmB,GAAP,eAyBA,OAVAC,EAAAA,EAAAA,YAAU,WACQ,IAAD,EAATJ,GACJT,EAAM,CACJc,KAAY,OAAPL,QAAO,IAAPA,OAAA,EAAAA,EAASK,MAAO,GACrBC,OAAc,OAAPN,QAAO,IAAPA,OAAA,EAAAA,EAASM,QAAS,GACzBC,UAAiB,OAAPP,QAAO,IAAPA,GAAA,UAAAA,EAASO,gBAAT,eAAmBzB,KAAM,OAGtC,CAACkB,EAAST,KAGX,SAAC,MAAD,kBAAkBL,GAAlB,cACE,kBAAMsB,UAAU,aAAhB,WACE,SAAC,KAAD,CACEF,MAAM,4BACNG,OAAQ3B,EACR0B,WAAWE,EAAAA,EAAAA,KACRjB,EAAOa,OAASb,EAAOY,MAAQ,yBAJpC,UAOE,SAAC,KAAD,OAEF,SAAC,KAAD,CAAaM,SAAUnB,GAjCN,SAAC,GAA+C,IAA7Ce,EAA4C,EAA5CA,SAAUF,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MACvCH,GACES,EAAAA,EAAAA,KAAO,QACLP,IAAAA,EACAC,MAAAA,EACAC,SAAU,CAAEzB,GAAIyB,MACVP,GAAW,CAAElB,GAAE,OAAEkB,QAAF,IAAEA,OAAF,EAAEA,EAASlB","sources":["admin/pages/Media/CreateMediaPage.tsx"],"sourcesContent":["import { ReactElement, useEffect } from 'react';\r\nimport { joiResolver } from '@hookform/resolvers/joi';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\n\r\nimport { Accordion, FormActions } from '../../components/molecules';\r\nimport { MediaForm, MediaFormInputs } from '../../components/organisms';\r\nimport { VideoFormSchema } from '../../validations/VideoForm.schema';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { useGetLinkQuery, useSaveLinkMutation } from '../../../GraphQl/graphql';\r\nimport { gqlVar, twClsx } from '../../utils';\r\n\r\nconst CreateMediaPage = (): ReactElement => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const methods = useForm<MediaFormInputs>({\r\n    resolver: joiResolver(VideoFormSchema),\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const { data: { getLink = null } = {} } = useGetLinkQuery({\r\n    variables: { entity: { id } },\r\n    skip: !id,\r\n  });\r\n\r\n  const [saveLink] = useSaveLinkMutation({\r\n    onCompleted: () => navigate('/admin/medias'),\r\n  });\r\n\r\n  const handleOnSubmit = ({ category, url, title }: MediaFormInputs) => {\r\n    saveLink(\r\n      gqlVar({\r\n        url,\r\n        title,\r\n        category: { id: category },\r\n        ...(!!getLink && { id: getLink?.id }),\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!getLink) {\r\n      reset({\r\n        url: getLink?.url || '',\r\n        title: getLink?.title || '',\r\n        category: getLink?.category?.id || '',\r\n      });\r\n    }\r\n  }, [getLink, reset]);\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form className=\"min-h-full\">\r\n        <Accordion\r\n          title=\"Neues Video hinzufÃ¼gen\"\r\n          open={!!id}\r\n          className={twClsx(\r\n            (errors.title || errors.url) && 'border border-primary'\r\n          )}\r\n        >\r\n          <MediaForm />\r\n        </Accordion>\r\n        <FormActions onSubmit={handleSubmit(handleOnSubmit)} />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default CreateMediaPage;\r\n"],"names":["id","useParams","navigate","useNavigate","methods","useForm","resolver","joiResolver","VideoFormSchema","reset","handleSubmit","errors","formState","useGetLinkQuery","variables","entity","skip","data","getLink","useSaveLinkMutation","onCompleted","saveLink","useEffect","url","title","category","className","open","twClsx","onSubmit","gqlVar"],"sourceRoot":""}