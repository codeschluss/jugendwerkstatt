{"version":3,"file":"static/js/653.465ac873.chunk.js","mappings":"mMAmGA,UAvFgC,WAC9B,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GACEE,EAAAA,EAAAA,KAAsB,CACpBC,UAAW,CACTC,OAAQ,CACNC,WAAY,CACVC,YAAa,CACXC,SAAUC,EAAAA,IAAAA,IACVC,SAAU,CACR,CACEH,YAAa,CACXC,SAAUC,EAAAA,IAAAA,GACVC,SAAU,CACR,CACEC,OAAQ,CACNH,SAAUI,EAAAA,IAAAA,MACVC,KAAM,YACNC,MAAOb,IAGX,CACEU,OAAQ,CACNH,SAAUI,EAAAA,IAAAA,MACVC,KAAM,YACNC,MAAO,UAMjB,CACEH,OAAQ,CACNH,SAAUI,EAAAA,IAAAA,MACVC,KAAM,WACNC,MAAO,SAGX,CACEH,OAAQ,CACNH,SAAUI,EAAAA,IAAAA,MACVC,KAAM,WACNC,MAAO,gBAxCzB,IAAQC,KAAR,gBAAiC,GAAjC,GAAgBC,MAAAA,OAAhB,MAAwB,KAAxB,EAA8CC,EAA9C,EAAqCC,QAkDrC,GAAyCC,EAAAA,EAAAA,KAAkB,CACzDf,UAAW,CAAEH,GAAAA,KADPc,KAAR,gBAAkC,GAAlC,GAAgBK,OAAAA,OAAhB,MAAyB,KAAzB,EAIA,GAAoBC,EAAAA,EAAAA,KAA2B,CAC7CC,YAAa,kBAAML,OADdM,GAAP,eAOA,OACE,UAAC,aAAD,YACE,SAAC,KAAD,CACEC,WAAY,CAAC,OAAQ,SAAU,YAC/BC,UACQ,OAALT,QAAK,IAALA,OAAA,EAAAA,EAAOU,SACNV,EAAMU,OAAOC,KAAI,SAACC,GAAD,MATIC,EASJ,OACf,UAAC,SAAD,YACE,SAAC,UAAD,iBAAaD,QAAb,IAAaA,OAAb,EAAaA,EAAME,YACnB,SAAC,UAAD,iBAAaV,QAAb,IAAaA,GAAb,UAAaA,EAAQW,aAArB,aAAa,EAAeC,QAC5B,SAAC,UAAD,WACE,SAAC,KAAD,CAAQC,WAdOJ,GAc8B,OAAJD,QAAI,IAAJA,OAAA,EAAAA,EAAM3B,KAAM,GAdnB,kBAChDsB,EAAU,CAAEnB,UAAW,CAAEyB,OAAAA,EAAQK,UAAgB,OAANd,QAAM,IAANA,OAAA,EAAAA,EAAQnB,KAAM,cAS/C,OAAgB2B,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAM3B,QAQ1B,MAGJ,SAAC,KAAD,CAAYkC,MAAM","sources":["admin/pages/Group/CreateCourseMembersPage.tsx"],"sourcesContent":["import { ReactElement } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport {\r\n  ConjunctionOperator,\r\n  QueryOperator,\r\n  useAddCourseMemberMutation,\r\n  useGetCourseQuery,\r\n  useGetUsersAdminQuery,\r\n} from '../../../GraphQl/graphql';\r\nimport { Action, Panel, Table } from '../../components/atoms';\r\nimport { BackButton, CustomTable } from '../../components/molecules';\r\n\r\nconst CreateCourseMembersPage = (): ReactElement => {\r\n  const { id } = useParams();\r\n\r\n  const { data: { users = null } = {}, refetch: refetchUsers } =\r\n    useGetUsersAdminQuery({\r\n      variables: {\r\n        params: {\r\n          expression: {\r\n            conjunction: {\r\n              operator: ConjunctionOperator.And,\r\n              operands: [\r\n                {\r\n                  conjunction: {\r\n                    operator: ConjunctionOperator.Or,\r\n                    operands: [\r\n                      {\r\n                        entity: {\r\n                          operator: QueryOperator.Equal,\r\n                          path: 'course.id',\r\n                          value: id\r\n                        }\r\n                      },\r\n                      {\r\n                        entity: {\r\n                          operator: QueryOperator.Equal,\r\n                          path: 'course.id',\r\n                          value: null\r\n                        }\r\n                      }\r\n                    ]\r\n                  }\r\n                },\r\n                {\r\n                  entity: {\r\n                    operator: QueryOperator.Equal,\r\n                    path: 'approved',\r\n                    value: 'true'\r\n                  }\r\n                },\r\n                {\r\n                  entity: {\r\n                    operator: QueryOperator.Equal,\r\n                    path: 'verified',\r\n                    value: 'true'\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n      },\r\n    });\r\n    \r\n  const { data: { course = null } = {} } = useGetCourseQuery({\r\n    variables: { id },\r\n  });\r\n\r\n  const [addMember] = useAddCourseMemberMutation({\r\n    onCompleted: () => refetchUsers(),\r\n  });\r\n\r\n  const handleAddCourseMember = (userId: string) => () =>\r\n    addMember({ variables: { userId, courseId: course?.id || '' } });\r\n\r\n  return (\r\n    <Panel.Wrapper>\r\n      <CustomTable\r\n        headerData={['Name', 'Gruppe', 'Aktionen']}\r\n        bodyData={\r\n          (users?.result &&\r\n            users.result.map((user) => (\r\n              <Table.Row key={user?.id}>\r\n                <Table.Data>{user?.fullname}</Table.Data>\r\n                <Table.Data>{course?.group?.name}</Table.Data>\r\n                <Table.Data>\r\n                  <Action onApprove={handleAddCourseMember(user?.id || '')} />\r\n                </Table.Data>\r\n              </Table.Row>\r\n            ))) ||\r\n          []\r\n        }\r\n      />\r\n      <BackButton label=\"Zurück zur Übersicht\" />\r\n    </Panel.Wrapper>\r\n  );\r\n};\r\n\r\nexport default CreateCourseMembersPage;\r\n"],"names":["id","useParams","useGetUsersAdminQuery","variables","params","expression","conjunction","operator","ConjunctionOperator","operands","entity","QueryOperator","path","value","data","users","refetchUsers","refetch","useGetCourseQuery","course","useAddCourseMemberMutation","onCompleted","addMember","headerData","bodyData","result","map","user","userId","fullname","group","name","onApprove","courseId","label"],"sourceRoot":""}