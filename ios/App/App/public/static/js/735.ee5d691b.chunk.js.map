{"version":3,"file":"static/js/735.ee5d691b.chunk.js","mappings":"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","sources":["admin/pages/Events/CreateEventsPage.tsx"],"sourcesContent":["import { ReactElement, useEffect, useState } from 'react';\r\nimport {\r\n  FieldArrayWithId,\r\n  FormProvider,\r\n  useFieldArray,\r\n  useForm,\r\n} from 'react-hook-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { joiResolver } from '@hookform/resolvers/joi';\r\n\r\nimport {\r\n  Accordion,\r\n  EventImagePreview,\r\n  FormActions,\r\n  UploadField,\r\n} from '../../components/molecules';\r\nimport {\r\n  AddressForm,\r\n  BaseDataForm,\r\n  DescriptionFrom,\r\n  EventsFormInputs,\r\n  ScheduleInputs,\r\n  SchedulesForm,\r\n} from '../../components/organisms';\r\nimport {\r\n  useGetEventAdminQuery,\r\n  useSaveEventMutation,\r\n} from '../../../GraphQl/graphql';\r\nimport { EventsFormSchema } from '../../validations';\r\nimport dayjs from 'dayjs';\r\nimport { base64ImageToFile, fileObject, twClsx } from '../../utils';\r\nimport { API_URL } from '../../../config/app';\r\n\r\nconst CreateEventsPage = (): ReactElement => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [file, setFile] = useState<FieldArrayWithId<\r\n    EventsFormInputs,\r\n    'files',\r\n    'id'\r\n  > | null>(null);\r\n\r\n  const [imageFile, setImageFile] = useState<{ file: File; id: string } | null>(\r\n    null\r\n  );\r\n  const [schedules, setSchedules] = useState<ScheduleInputs[] | []>([]);\r\n\r\n  const { data: { getEvent = null } = {} } = useGetEventAdminQuery({\r\n    variables: { entity: { id } },\r\n    skip: !id,\r\n  });\r\n\r\n  const [saveEvent, { loading }] = useSaveEventMutation({\r\n    onCompleted: () => navigate('/admin/events'),\r\n  });\r\n\r\n  const methods = useForm<EventsFormInputs>({\r\n    resolver: joiResolver(EventsFormSchema),\r\n    defaultValues: !getEvent\r\n      ? {\r\n          schedule: {\r\n            start_date: dayjs().startOf('date').toDate(),\r\n            end_date: dayjs().startOf('date').toDate(),\r\n            end_repeat: dayjs().startOf('date').toDate(),\r\n            start_hour: dayjs().startOf('h').toDate(),\r\n            end_hour: dayjs().startOf('h').toDate(),\r\n          },\r\n          files: [{ file: null }],\r\n        }\r\n      : {},\r\n  });\r\n\r\n  const {\r\n    formState: { errors },\r\n    handleSubmit,\r\n    register,\r\n    reset,\r\n    control,\r\n  } = methods;\r\n\r\n  const { fields, append, remove, update } = useFieldArray({\r\n    name: 'files',\r\n    control,\r\n  });\r\n\r\n  const handleOnSubmit = async ({\r\n    baseData: { name, category, organizer },\r\n    address,\r\n    description,\r\n  }: EventsFormInputs) => {\r\n    let images: { name: string; mimeType: string; base64: string }[] = [];\r\n\r\n    for (const field of fields) {\r\n      if (!!field.file && field.file.size !== 0) {\r\n        const object = await fileObject(field.file);\r\n        images.push(object);\r\n      }\r\n    }\r\n\r\n    saveEvent({\r\n      variables: {\r\n        entity: {\r\n          name,\r\n          images,\r\n          address,\r\n          schedules,\r\n          description,\r\n          category: { id: category },\r\n          organizer: { id: organizer },\r\n          ...(!!imageFile?.file &&\r\n            file?.file?.size !== 0 && {\r\n              titleImage: await fileObject(imageFile.file),\r\n            }),\r\n          ...(!!getEvent && { id: getEvent?.id }),\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleAppend = (index: number, file: File | null) => {\r\n    update(index, { file });\r\n    append({ file: null });\r\n  };\r\n\r\n  const handleSetFile =\r\n    (item: FieldArrayWithId<EventsFormInputs, 'files', 'id'>) => () => {\r\n      setFile(item);\r\n    };\r\n\r\n  const handleRemoveImage = (id: string) => {\r\n    remove(fields.findIndex((field) => field.id === id));\r\n    setFile(null);\r\n  };\r\n\r\n  const onHandle = (data: { file: File; id: string } | null) => {\r\n    setImageFile(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log('getEvent', getEvent);\r\n    if (!!getEvent) {\r\n      const schedules = getEvent.schedules?.map((schedule) => ({\r\n        startDate: schedule?.startDate,\r\n        endDate: schedule?.endDate,\r\n      }));\r\n      setSchedules(schedules || []);\r\n\r\n      const images =\r\n        getEvent?.images?.map((item) => ({\r\n          file: base64ImageToFile(\r\n            item?.base64 || '',\r\n            item?.mimeType || '',\r\n            item?.name || ''\r\n          ),\r\n        })) || [];\r\n\r\n      reset({\r\n        baseData: {\r\n          name: getEvent?.name || '',\r\n          category: getEvent?.category?.id || '',\r\n          organizer: getEvent?.organizer?.id || '',\r\n        },\r\n        description: getEvent?.description || '',\r\n        address: {\r\n          houseNumber: getEvent?.address?.houseNumber || '',\r\n          place: getEvent?.address?.place || '',\r\n          postalCode: getEvent?.address?.postalCode || '',\r\n          street: getEvent?.address?.street || '',\r\n        },\r\n        schedule: {\r\n          start_date: dayjs().startOf('date').toDate(),\r\n          end_date: dayjs().startOf('date').toDate(),\r\n          end_repeat: dayjs().startOf('date').toDate(),\r\n          start_hour: dayjs().startOf('h').toDate(),\r\n          end_hour: dayjs().startOf('h').toDate(),\r\n        },\r\n        files: [...images, { file: null }],\r\n      });\r\n\r\n      const titleImage = base64ImageToFile(\r\n        getEvent?.titleImage?.base64 || '',\r\n        getEvent?.titleImage?.mimeType || '',\r\n        getEvent?.titleImage?.name || ''\r\n      );\r\n\r\n      setImageFile({\r\n        id: getEvent?.titleImage?.id || '',\r\n        file: titleImage,\r\n      });\r\n\r\n      setFile({\r\n        file: titleImage,\r\n        id: getEvent?.titleImage?.id || '',\r\n      });\r\n    }\r\n  }, [getEvent, reset]);\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form className=\"min-h-full\">\r\n        <Accordion\r\n          title=\"Stammdaten\"\r\n          open={!!id}\r\n          className={twClsx(errors.baseData && 'border border-primary')}\r\n        >\r\n          <BaseDataForm />\r\n        </Accordion>\r\n        <Accordion\r\n          title=\"Adresse\"\r\n          className={twClsx(errors.address && 'border border-primary')}\r\n        >\r\n          <AddressForm />\r\n        </Accordion>\r\n        <Accordion\r\n          title=\"Beschreibung\"\r\n          className={twClsx(errors.description && 'border border-primary')}\r\n        >\r\n          <DescriptionFrom />\r\n        </Accordion>\r\n        <Accordion\r\n          title=\"Bilder\"\r\n          showSide\r\n          sideClassName=\"w-auto\"\r\n          className={twClsx(errors.files && 'border border-primary')}\r\n          sideContent={\r\n            file && (\r\n              <EventImagePreview\r\n                id={file.id}\r\n                {...(file?.file && {\r\n                  src:\r\n                    file.file.size === 0\r\n                      ? `${API_URL}media/${file?.id}`\r\n                      : URL.createObjectURL(file.file),\r\n                })}\r\n                file={file.file}\r\n                onHandle={onHandle}\r\n                isTitleBild={imageFile?.id === file.id}\r\n                onRemoveImage={handleRemoveImage}\r\n              />\r\n            )\r\n          }\r\n        >\r\n          <div className=\"flex flex-wrap items-start justify-start\">\r\n            {fields.map((item, index) => (\r\n              <UploadField\r\n                preview\r\n                key={index}\r\n                index={index}\r\n                id={`files.${index}.file`}\r\n                handleAppend={handleAppend}\r\n                handleShow={handleSetFile(item)}\r\n                {...register(`files.${index}.file`)}\r\n                error={errors.files?.[index]?.file?.message}\r\n                {...(!!item.file && {\r\n                  src:\r\n                    item.file.size !== 0\r\n                      ? URL.createObjectURL(item.file)\r\n                      : `${API_URL}media/${item?.id}`,\r\n                })}\r\n              />\r\n            ))}\r\n          </div>\r\n        </Accordion>\r\n\r\n        <SchedulesForm setSchedules={setSchedules} schedules={schedules} />\r\n        <FormActions\r\n          loading={loading}\r\n          onSubmit={handleSubmit(handleOnSubmit)}\r\n        />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default CreateEventsPage;\r\n"],"names":["id","useParams","navigate","useNavigate","useState","file","setFile","imageFile","setImageFile","schedules","setSchedules","useGetEventAdminQuery","variables","entity","skip","data","getEvent","useSaveEventMutation","onCompleted","saveEvent","loading","methods","useForm","resolver","joiResolver","EventsFormSchema","defaultValues","schedule","start_date","dayjs","startOf","toDate","end_date","end_repeat","start_hour","end_hour","files","errors","formState","handleSubmit","register","reset","control","useFieldArray","name","fields","append","remove","update","handleOnSubmit","baseData","category","organizer","address","description","images","field","size","fileObject","object","push","titleImage","handleAppend","index","handleSetFile","item","useEffect","console","log","map","startDate","endDate","base64ImageToFile","base64","mimeType","houseNumber","place","postalCode","street","className","title","open","twClsx","showSide","sideClassName","sideContent","src","API_URL","URL","createObjectURL","onHandle","isTitleBild","onRemoveImage","findIndex","preview","handleShow","error","message","onSubmit"],"sourceRoot":""}