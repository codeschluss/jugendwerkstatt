{"version":3,"file":"static/js/131.64eb7621.chunk.js","mappings":"mMAwDA,UA/CkB,WAChB,IAAMA,GAAWC,EAAAA,EAAAA,MACTC,GAAOC,EAAAA,EAAAA,MAAPD,GAER,GAAiDE,EAAAA,EAAAA,KAAiB,CAChEC,YAAa,oBACbC,UAAW,CAAEC,OAAQ,CAAEL,GAAAA,MAFzB,IAAQM,KAAR,gBAAiC,GAAjC,GAAgBC,MAAAA,OAAhB,MAAwB,KAAxB,EAAqCC,EAArC,EAAqCA,QAIrC,GAAuBC,EAAAA,EAAAA,KAAwB,CAC7CC,YAAa,kBAAMF,OADdG,GAAP,eAMMC,EAA0B,SAACC,GAAD,OAAsB,WAEhDC,QAAQ,oCACVH,EAAa,CAAEP,UAAW,CAAEJ,GAAIa,OAG9BE,GAAoB,OAALR,QAAK,IAALA,OAAA,EAAAA,EAAOS,UAAW,GAEvC,OACE,SAAC,aAAD,CACEC,OAAQ,CACNC,GAAG,iBAAD,QAAwB,OAALX,QAAK,IAALA,OAAA,EAAAA,EAAOP,KAAM,GAAhC,gBACFmB,MAAO,sBAHX,UAME,SAAC,KAAD,CACEC,WAAY,CAAC,WAAY,YACzBC,SAAQ,OAAEN,QAAF,IAAEA,OAAF,EAAEA,EAAcO,KAAI,SAACC,GAAD,OAC1B,UAAC,SAAD,YACE,SAAC,UAAD,iBAAaA,QAAb,IAAaA,OAAb,EAAaA,EAAQC,QACrB,SAAC,UAAD,WACE,SAAC,KAAD,CACEC,UAxBiBZ,GAwBqB,OAANU,QAAM,IAANA,OAAA,EAAAA,EAAQvB,KAAM,GAxBR,kBAClDF,EAAS,iBAAD,OAAkBE,EAAlB,oBAAgCa,MAwB5Ba,SAAUd,GAA8B,OAANW,QAAM,IAANA,OAAA,EAAAA,EAAQvB,KAAM,UALtD,OAAgBuB,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAQvB,IApBF,IAACa","sources":["admin/pages/Group/GroupPage.tsx"],"sourcesContent":["import { ReactElement } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  useDeleteCourseMutation,\r\n  useGetGroupQuery,\r\n} from '../../../GraphQl/graphql';\r\nimport { Action, Panel, Table } from '../../components/atoms';\r\nimport { CustomTable } from '../../components/molecules';\r\n\r\nconst GroupPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n\r\n  const { data: { group = null } = {}, refetch } = useGetGroupQuery({\r\n    fetchPolicy: 'cache-and-network',\r\n    variables: { entity: { id } },\r\n  });\r\n  const [deleteCourse] = useDeleteCourseMutation({\r\n    onCompleted: () => refetch(),\r\n  });\r\n\r\n  const handleEditGroupCourse = (courseId: string) => () =>\r\n    navigate(`/admin/groups/${id}/courses/${courseId}`);\r\n  const handleDeleteGroupCourse = (courseId: string) => () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Möchten Sie dies löschen?'))\r\n      deleteCourse({ variables: { id: courseId } });\r\n  };\r\n\r\n  const groupCourses = group?.courses || [];\r\n\r\n  return (\r\n    <Panel.Wrapper\r\n      action={{\r\n        to: `/admin/groups/${group?.id || ''}/courses/new`,\r\n        label: 'Neuen Kurs anlegen',\r\n      }}\r\n    >\r\n      <CustomTable\r\n        headerData={['Kursname', 'Aktionen']}\r\n        bodyData={groupCourses?.map((course) => (\r\n          <Table.Row key={course?.id}>\r\n            <Table.Data>{course?.name}</Table.Data>\r\n            <Table.Data>\r\n              <Action\r\n                onUpdate={handleEditGroupCourse(course?.id || '')}\r\n                onDelete={handleDeleteGroupCourse(course?.id || '')}\r\n              />\r\n            </Table.Data>\r\n          </Table.Row>\r\n        ))}\r\n      />\r\n    </Panel.Wrapper>\r\n  );\r\n};\r\n\r\nexport default GroupPage;\r\n"],"names":["navigate","useNavigate","id","useParams","useGetGroupQuery","fetchPolicy","variables","entity","data","group","refetch","useDeleteCourseMutation","onCompleted","deleteCourse","handleDeleteGroupCourse","courseId","confirm","groupCourses","courses","action","to","label","headerData","bodyData","map","course","name","onUpdate","onDelete"],"sourceRoot":""}