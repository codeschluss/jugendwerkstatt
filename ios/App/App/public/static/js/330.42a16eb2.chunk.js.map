{"version":3,"file":"static/js/330.42a16eb2.chunk.js","mappings":"mMAiEA,UAvDsB,WAAqB,IAAD,EAClCA,GAAWC,EAAAA,EAAAA,MAEjB,GAAoDC,EAAAA,EAAAA,KAAiB,CACnEC,YAAa,sBADf,IAAQC,KAAR,gBAAoC,GAApC,GAAgBC,SAAAA,OAAhB,MAA2B,KAA3B,EAAwCC,EAAxC,EAAwCA,QAIxC,GAAqBC,EAAAA,EAAAA,KAAsB,CACzCC,YAAa,kBAAMF,OADdG,GAAP,eAIMC,EAAmB,SAACC,GAAD,OAAgB,WAEnCC,QAAQ,oCACVH,EAAW,CAAEI,UAAW,CAAEF,GAAAA,OAM9B,OACE,SAAC,aAAD,CACEG,OAAQ,CAAEC,GAAI,oBAAqBC,MAAO,6BAD5C,UAGE,SAAC,KAAD,CACEC,WAAY,CAAC,YAAa,YAAa,OAAQ,YAC/CC,UACU,OAARb,QAAQ,IAARA,GAAA,UAAAA,EAAUc,cAAV,eAAkBC,KAAI,SAACC,GAAD,MATJV,EASI,OACpB,UAAC,SAAD,YACE,SAAC,UAAD,iBAAaU,QAAb,IAAaA,OAAb,EAAaA,EAAMC,SACnB,SAAC,UAAD,iBAAaD,QAAb,IAAaA,GAAb,UAAaA,EAAME,gBAAnB,aAAa,EAAgBC,QAC7B,SAAC,UAAD,WACE,cACEC,UAAU,kBACVC,IAAI,sBACJC,OAAO,SACPC,MAAU,OAAJP,QAAI,IAAJA,OAAA,EAAAA,EAAMQ,MAAO,GAJrB,gBAMGR,QANH,IAMGA,OANH,EAMGA,EAAMQ,SAGX,SAAC,UAAD,WACE,SAAC,KAAD,CACEC,UAzBUnB,GAyBqB,OAAJU,QAAI,IAAJA,OAAA,EAAAA,EAAMV,KAAM,GAzBd,kBAAMX,EAASW,KA0BxCoB,SAAUrB,GAAqB,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMV,KAAM,UAhB7C,OAAgBU,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMV,SAoBlB","sources":["admin/pages/Media/MediaListPage.tsx"],"sourcesContent":["import { ReactElement } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport {\r\n  useDeleteLinkMutation,\r\n  useGetLinksQuery,\r\n} from \"../../../GraphQl/graphql\";\r\nimport { Table, Action, Panel } from \"../../components/atoms\";\r\nimport { CustomTable } from \"../../components/molecules\";\r\n\r\nconst MediaListPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n\r\n  const { data: { getLinks = null } = {}, refetch } = useGetLinksQuery({\r\n    fetchPolicy: \"cache-and-network\",\r\n  });\r\n\r\n  const [deleteLink] = useDeleteLinkMutation({\r\n    onCompleted: () => refetch(),\r\n  });\r\n\r\n  const handleDeleteById = (id: string) => () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm(\"Möchten Sie dies löschen?\")) {\r\n      deleteLink({ variables: { id } });\r\n    }\r\n  };\r\n\r\n  const handleUpdateById = (id: string) => () => navigate(id);\r\n\r\n  return (\r\n    <Panel.Wrapper\r\n      action={{ to: \"/admin/medias/new\", label: \"Neues Video hinzufügen\" }}\r\n    >\r\n      <CustomTable\r\n        headerData={[\"Videoname\", \"Kategorie\", \"Link\", \"Aktionen\"]}\r\n        bodyData={\r\n          getLinks?.result?.map((item) => (\r\n            <Table.Row key={item?.id}>\r\n              <Table.Data>{item?.title}</Table.Data>\r\n              <Table.Data>{item?.category?.name}</Table.Data>\r\n              <Table.Data>\r\n                <a\r\n                  className=\"hover:underline\"\r\n                  rel=\"noopener noreferrer\"\r\n                  target=\"_blank\"\r\n                  href={item?.url || \"\"}\r\n                >\r\n                  {item?.url}\r\n                </a>\r\n              </Table.Data>\r\n              <Table.Data>\r\n                <Action\r\n                  onUpdate={handleUpdateById(item?.id || \"\")}\r\n                  onDelete={handleDeleteById(item?.id || \"\")}\r\n                />\r\n              </Table.Data>\r\n            </Table.Row>\r\n          )) || []\r\n        }\r\n      />\r\n    </Panel.Wrapper>\r\n  );\r\n};\r\n\r\nexport default MediaListPage;\r\n"],"names":["navigate","useNavigate","useGetLinksQuery","fetchPolicy","data","getLinks","refetch","useDeleteLinkMutation","onCompleted","deleteLink","handleDeleteById","id","confirm","variables","action","to","label","headerData","bodyData","result","map","item","title","category","name","className","rel","target","href","url","onUpdate","onDelete"],"sourceRoot":""}