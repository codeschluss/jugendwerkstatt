{"version":3,"file":"static/js/615.2e183528.chunk.js","mappings":"8MAgEA,UArDuB,WAAqB,IAAD,IACnCA,GAAWC,EAAAA,EAAAA,MAEjB,GAA0BC,EAAAA,EAAAA,KAAuB,CAC/CC,YAAa,sBADPC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAId,GAAsBC,EAAAA,EAAAA,KAAuB,CAC3CC,YAAa,kBAAMF,OADdG,GAAP,eAIMC,EAAmB,SAACC,GAAD,OAAgB,WAEnCC,QAAQ,oCACVH,EAAY,CAAEI,UAAW,CAAEF,GAAAA,OAM/B,OACE,SAAC,aAAD,CACEG,OAAQ,CAAEC,GAAI,oBAAqBC,MAAO,yBAD5C,UAGE,SAAC,KAAD,CACEC,WAAY,CAAC,YAAa,YAAa,QAAS,UAAW,YAC3DC,UACM,OAAJb,QAAI,IAAJA,GAAA,UAAAA,EAAMc,iBAAN,mBAAiBC,cAAjB,eAAyBC,KAAI,SAACC,GAAD,kBATXX,EASW,OAC3B,UAAC,SAAD,YACE,SAAC,UAAD,iBAAaW,QAAb,IAAaA,OAAb,EAAaA,EAAMC,QACnB,SAAC,UAAD,iBAAaD,QAAb,IAAaA,GAAb,UAAaA,EAAME,gBAAnB,aAAa,EAAgBD,QAC7B,SAAC,UAAD,WACGE,EAAAA,EAAAA,IAAU,OAACH,QAAD,IAACA,GAAD,UAACA,EAAMI,iBAAP,iBAAC,EAAkB,UAAnB,aAAC,EAAsBC,cAEpC,SAAC,UAAD,qBACMC,EAAAA,EAAAA,IAAc,OAChBN,QADgB,IAChBA,GADgB,UAChBA,EAAMI,iBADU,iBAChB,EAAkB,UADF,aAChB,EAAsBC,WAF1B,eAGSC,EAAAA,EAAAA,IAAc,OAACN,QAAD,IAACA,GAAD,UAACA,EAAMI,iBAAP,iBAAC,EAAkB,UAAnB,aAAC,EAAsBC,WAH9C,WAKA,SAAC,UAAD,WACE,SAAC,KAAD,CACEE,UAvBUlB,GAuBqB,OAAJW,QAAI,IAAJA,OAAA,EAAAA,EAAMX,KAAM,GAvBd,kBAAMV,EAASU,KAwBxCmB,SAAUpB,GAAqB,OAAJY,QAAI,IAAJA,OAAA,EAAAA,EAAMX,KAAM,UAd7C,OAAgBW,QAAhB,IAAgBA,OAAhB,EAAgBA,EAAMX,SAkBlB","sources":["admin/pages/Events/EventsListPage.tsx"],"sourcesContent":["import { ReactElement } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  useDeleteEventMutation,\r\n  useGetEventsAdminQuery,\r\n} from '../../../GraphQl/graphql';\r\n\r\nimport { Table, Action, Panel } from '../../components/atoms';\r\nimport { CustomTable } from '../../components/molecules';\r\nimport { formatDate, formatDateTime } from '../../utils';\r\n\r\nconst EventsListPage = (): ReactElement => {\r\n  const navigate = useNavigate();\r\n\r\n  const { data, refetch } = useGetEventsAdminQuery({\r\n    fetchPolicy: 'cache-and-network',\r\n  });\r\n\r\n  const [deleteEvent] = useDeleteEventMutation({\r\n    onCompleted: () => refetch(),\r\n  });\r\n\r\n  const handleDeleteById = (id: string) => () => {\r\n    // eslint-disable-next-line no-restricted-globals\r\n    if (confirm('Möchten Sie dies löschen?')) {\r\n      deleteEvent({ variables: { id } });\r\n    }\r\n  };\r\n\r\n  const handleUpdateById = (id: string) => () => navigate(id);\r\n\r\n  return (\r\n    <Panel.Wrapper\r\n      action={{ to: '/admin/events/new', label: 'Neues Event erstellen' }}\r\n    >\r\n      <CustomTable\r\n        headerData={['Eventname', 'Kategorie', 'Datum', 'Uhrzeit', 'Aktionen']}\r\n        bodyData={\r\n          data?.getEvents?.result?.map((item) => (\r\n            <Table.Row key={item?.id}>\r\n              <Table.Data>{item?.name}</Table.Data>\r\n              <Table.Data>{item?.category?.name}</Table.Data>\r\n              <Table.Data>\r\n                {formatDate(item?.schedules?.[0]?.startDate)}\r\n              </Table.Data>\r\n              <Table.Data>\r\n                {`${formatDateTime(\r\n                  item?.schedules?.[0]?.startDate\r\n                )} - ${formatDateTime(item?.schedules?.[0]?.startDate)} Uhr`}\r\n              </Table.Data>\r\n              <Table.Data>\r\n                <Action\r\n                  onUpdate={handleUpdateById(item?.id || '')}\r\n                  onDelete={handleDeleteById(item?.id || '')}\r\n                />\r\n              </Table.Data>\r\n            </Table.Row>\r\n          )) || []\r\n        }\r\n      />\r\n    </Panel.Wrapper>\r\n  );\r\n};\r\n\r\nexport default EventsListPage;\r\n"],"names":["navigate","useNavigate","useGetEventsAdminQuery","fetchPolicy","data","refetch","useDeleteEventMutation","onCompleted","deleteEvent","handleDeleteById","id","confirm","variables","action","to","label","headerData","bodyData","getEvents","result","map","item","name","category","formatDate","schedules","startDate","formatDateTime","onUpdate","onDelete"],"sourceRoot":""}