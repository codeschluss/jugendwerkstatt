{"version":3,"file":"static/js/385.dd0314cd.chunk.js","mappings":"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","sources":["admin/pages/GeneralSettings/CreatePublicPagesPage.tsx"],"sourcesContent":["import { joiResolver } from '@hookform/resolvers/joi';\r\nimport { ReactElement, useEffect, useState } from 'react';\r\nimport {\r\n  FieldArrayWithId,\r\n  FormProvider,\r\n  useFieldArray,\r\n  useForm,\r\n} from 'react-hook-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { API_URL } from '../../../config/app';\r\nimport { useGetPageQuery, useSavePageMutation } from '../../../GraphQl/graphql';\r\nimport { Button } from '../../components/atoms';\r\nimport {\r\n  Accordion,\r\n  EventImagePreview,\r\n  FormActions,\r\n  InputField,\r\n  UploadField,\r\n} from '../../components/molecules';\r\nimport { DescriptionFrom } from '../../components/organisms';\r\nimport { base64ImageToFile, fileObject, twClsx } from '../../utils';\r\nimport { PublicPagesFormSchema } from '../../validations';\r\nimport { PublicPageFormInputs } from './PublicPageForm.props';\r\n\r\nconst CreatePublicPagesPage = (): ReactElement => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const [images, setImages] = useState<FieldArrayWithId<\r\n    PublicPageFormInputs,\r\n    'images',\r\n    'id'\r\n  > | null>(null);\r\n\r\n  const [imageFile, setImageFile] = useState<{ file: File; id: string } | null>(\r\n    null\r\n  );\r\n\r\n  const { data: { page = null } = {} } = useGetPageQuery({\r\n    skip: !id,\r\n    variables: { entity: { id } },\r\n  });\r\n\r\n  const methods = useForm<PublicPageFormInputs>({\r\n    resolver: joiResolver(PublicPagesFormSchema),\r\n    mode: 'onChange',\r\n    defaultValues: {\r\n      images: [{ file: null }],\r\n      video: { file: null },\r\n    },\r\n  });\r\n\r\n  const [savePage, { loading }] = useSavePageMutation({\r\n    onCompleted: () => navigate('/admin/general-settings/public-pages'),\r\n  });\r\n\r\n  const {\r\n    watch,\r\n    reset,\r\n    resetField,\r\n    control,\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  console.log(page);\r\n\r\n  const { fields, append, remove, update } = useFieldArray({\r\n    name: 'images',\r\n    control,\r\n  });\r\n\r\n  const handleOnSubmit = async (data: PublicPageFormInputs) => {\r\n    let images: { name: string; mimeType: string; base64: string }[] = [];\r\n\r\n    for (const field of fields) {\r\n      if (!!field.file) {\r\n        const object = await fileObject(field.file);\r\n        images.push({ ...object });\r\n      }\r\n    }\r\n\r\n    let videos: File[] = data.video as unknown as File[];\r\n    let choosedVideo: {\r\n      name: string;\r\n      mimeType: string;\r\n      base64: string;\r\n    } | null = null;\r\n    if (!page) {\r\n      for (const v of videos) {\r\n        const obj = await fileObject(v);\r\n        choosedVideo = {\r\n          name: obj.name,\r\n          mimeType: obj.mimeType,\r\n          base64: obj.base64,\r\n        };\r\n      }\r\n    }\r\n    console.log('videos', videos[0]);\r\n    // for (const video of data.video) console.log(data.video[0] as FileList);\r\n    // const video = await fileObject(data.video as unknown as File);\r\n\r\n    savePage({\r\n      variables: {\r\n        entity: {\r\n          ...(id && { id }),\r\n          slug: data.pageName,\r\n          name: data.pageName,\r\n          content: data.description,\r\n          images,\r\n          ...(!!imageFile?.file &&\r\n            imageFile?.file?.size !== 0 && {\r\n            titleImage: await fileObject(imageFile.file),\r\n          }),\r\n          video: page\r\n            ? {\r\n              id: page.video?.id,\r\n              mimeType: page.video?.mimeType,\r\n              base64: page.video?.base64,\r\n            }\r\n            : { ...choosedVideo },\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleAppend = (index: number, file: File | null) => {\r\n    update(index, { file });\r\n    append({ file: null });\r\n  };\r\n\r\n  const handleSetFile =\r\n    (item: FieldArrayWithId<PublicPageFormInputs, 'images', 'id'>) => () => {\r\n      setImages(item);\r\n    };\r\n\r\n  const handleRemoveImage = (id: string) => {\r\n    remove(fields.findIndex((field) => field.id === id));\r\n    setImages(null);\r\n  };\r\n\r\n  const handleRemoveVideo = () => resetField('video');\r\n\r\n  const onHandle = (data: { file: File; id: string } | null) => {\r\n    setImageFile(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!page) {\r\n      const images =\r\n        page?.images?.map((item) => ({\r\n          file: base64ImageToFile(\r\n            item?.base64 || '',\r\n            item?.mimeType || '',\r\n            item?.name || ''\r\n          ),\r\n        })) || [];\r\n\r\n      reset({\r\n        pageName: page.name || '',\r\n        description: page.content || '',\r\n        images: [...images, { file: null }],\r\n        video: {\r\n          file: base64ImageToFile(\r\n            page?.video?.base64 || '',\r\n            page?.video?.mimeType || '',\r\n            page?.video?.name || ''\r\n          ),\r\n        },\r\n      });\r\n      setImageFile({\r\n        id: page?.titleImage?.id || '',\r\n        file: base64ImageToFile(\r\n          page?.titleImage?.base64 || '',\r\n          page?.titleImage?.mimeType || '',\r\n          page?.titleImage?.name || ''\r\n        ),\r\n      });\r\n    }\r\n  }, [page, reset]);\r\n\r\n  console.log(errors, watch());\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form>\r\n        <Accordion\r\n          title=\"Stammdaten\"\r\n          open={!!id}\r\n          className={twClsx(errors.pageName && 'border border-primary')}\r\n        >\r\n          <InputField\r\n            id=\"pageName\"\r\n            label=\"Stammdaten\"\r\n            {...register('pageName')}\r\n            error={errors.pageName?.message}\r\n          />\r\n        </Accordion>\r\n        <Accordion\r\n          title=\"Titelbild\"\r\n          showSide\r\n          sideClassName=\"w-auto\"\r\n          sideContent={\r\n            images && (\r\n              <EventImagePreview\r\n                id={images.id}\r\n                {...(images?.file && {\r\n                  src:\r\n                    images.file.size === 0\r\n                      ? `${API_URL}media/${images?.id}`\r\n                      : URL.createObjectURL(images.file),\r\n                })}\r\n                file={images.file}\r\n                onHandle={onHandle}\r\n                isTitleBild={imageFile?.id === images.id}\r\n                onRemoveImage={handleRemoveImage}\r\n              />\r\n            )\r\n          }\r\n          className={twClsx(errors.images && 'border border-primary')}\r\n        >\r\n          <div className=\"flex items-start justify-start\">\r\n            {fields.map((item, index) => (\r\n              <UploadField\r\n                preview\r\n                key={index}\r\n                index={index}\r\n                id={`images.${index}.file`}\r\n                handleAppend={handleAppend}\r\n                handleShow={handleSetFile(item)}\r\n                {...register(`images.${index}.file`)}\r\n                error={errors.images?.[index]?.file?.message}\r\n                {...(!!item.file && {\r\n                  src:\r\n                    item.file.size !== 0\r\n                      ? URL.createObjectURL(item.file)\r\n                      : `${API_URL}media/${item?.id}`,\r\n                })}\r\n              />\r\n            ))}\r\n          </div>\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          title=\"Textfeld\"\r\n          className={twClsx(errors.description && 'border border-primary')}\r\n        >\r\n          <DescriptionFrom />\r\n        </Accordion>\r\n\r\n        <Accordion\r\n          title=\"Video\"\r\n          className={twClsx('p-5', errors.video && 'border border-primary')}\r\n        >\r\n          <div className=\"flex items-start justify-start\">\r\n            <UploadField id=\"video\"\r\n              placeholderTitle=\"Video hinzufügen\"\r\n              {...register('video')} />\r\n          </div>\r\n          <div className=\"flex gap-x-2\">\r\n            <Button\r\n              onClick={handleRemoveVideo}\r\n              className=\"border-[#424242] text-[#424242]\"\r\n              type=\"button\"\r\n            >\r\n              Löschen\r\n            </Button>\r\n          </div>\r\n        </Accordion>\r\n        <FormActions\r\n          loading={loading}\r\n          onSubmit={handleSubmit(handleOnSubmit)}\r\n        />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default CreatePublicPagesPage;\r\n"],"names":["id","useParams","navigate","useNavigate","useState","images","setImages","imageFile","setImageFile","useGetPageQuery","skip","variables","entity","data","page","methods","useForm","resolver","joiResolver","PublicPagesFormSchema","mode","defaultValues","file","video","useSavePageMutation","onCompleted","savePage","loading","watch","reset","resetField","control","register","handleSubmit","errors","formState","console","log","useFieldArray","name","fields","append","remove","update","handleOnSubmit","field","fileObject","object","push","videos","choosedVideo","v","obj","mimeType","base64","slug","pageName","content","description","size","titleImage","handleAppend","index","handleSetFile","item","useEffect","map","base64ImageToFile","title","open","className","twClsx","label","error","message","showSide","sideClassName","sideContent","src","API_URL","URL","createObjectURL","onHandle","isTitleBild","onRemoveImage","findIndex","preview","handleShow","placeholderTitle","onClick","type","onSubmit"],"sourceRoot":""}