{"version":3,"file":"static/js/441.2e13c2fb.chunk.js","mappings":"wRAiHA,UA9F0B,WACxB,IAAQA,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,IAA2B,CACzCC,UAAUC,EAAAA,EAAAA,GAAYC,EAAAA,IACtBC,cAAe,CACbC,KAAM,CACJC,UAAWC,GAAAA,GAAQC,SACnBC,QAASF,GAAAA,GAAQG,IAAI,EAAG,OAAOF,aAMnCG,EAGEZ,EAHFY,MACAC,EAEEb,EAFFa,aACaC,EACXd,EADFe,UAAaD,OAGf,GAA2CE,EAAAA,EAAAA,KAAsB,CAC/DC,UAAW,CAAEC,OAAQ,CAAEtB,GAAAA,IACvBuB,MAAOvB,IAFDwB,KAAR,gBAAoC,GAApC,GAAgBC,SAAAA,OAAhB,MAA2B,KAA3B,EAKA,GAAoBC,EAAAA,EAAAA,KAAqB,CACvCC,YAAa,kBAAMzB,EAAS,+BADvB0B,GAAP,eAyCA,OAnBAC,EAAAA,EAAAA,YAAU,WACS,IAAD,IAAVJ,GACJT,EAAM,CACJc,SAAU,CACRC,OAAe,OAARN,QAAQ,IAARA,OAAA,EAAAA,EAAUM,QAAS,GAC1BC,SAAiB,OAARP,QAAQ,IAARA,GAAA,UAAAA,EAAUO,eAAV,eAAmBhC,KAAM,GAClCiC,UAAkB,OAARR,QAAQ,IAARA,GAAA,UAAAA,EAAUS,YAAV,eAAgBlC,KAAM,IAElCU,KAAM,CACJC,UAAWC,GAAAA,CAAK,OAACa,QAAD,IAACA,OAAD,EAACA,EAAUd,WAAWE,SACtCC,QAASF,GAAAA,CAAK,OAACa,QAAD,IAACA,OAAD,EAACA,EAAUX,SAASD,UAEpCsB,aAAqB,OAARV,QAAQ,IAARA,OAAA,EAAAA,EAAUW,UAAW,OAGrC,CAACX,EAAUT,IAEdqB,QAAQC,IAAIb,IAGV,SAAC,MAAD,kBAAkBrB,GAAlB,cACE,kBAAMmC,UAAU,aAAhB,WACE,SAAC,KAAD,CACER,MAAM,aACNS,OAAQxC,EACRuC,WAAWE,EAAAA,EAAAA,IAAOvB,EAAOY,UAAY,yBAHvC,UAKE,SAAC,KAAD,OAEF,SAAC,KAAD,CACEC,MAAM,eACNQ,WAAWE,EAAAA,EAAAA,IAAOvB,EAAOiB,aAAe,yBAF1C,UAIE,SAAC,KAAD,OAEF,SAAC,KAAD,CACEJ,MAAM,UACNQ,WAAWE,EAAAA,EAAAA,IAAOvB,EAAOR,MAAQ,yBAFnC,UAIE,SAAC,KAAD,OAEF,SAAC,KAAD,CAAagC,SAAUzB,GA3DN,SAAC,GAIE,IAHxBkB,EAGuB,EAHvBA,YAGuB,IAFvBzB,KAAQI,EAEe,EAFfA,QAASH,EAEM,EAFNA,UAEM,IADvBmB,SAAYC,EACW,EADXA,MAAOC,EACI,EADJA,QAASC,EACL,EADKA,SAE5BL,GACEe,EAAAA,EAAAA,KAAO,QACLZ,MAAAA,EACAjB,QAAAA,EACAH,UAAAA,EACAyB,QAASD,EACTH,QAAS,CAAEhC,GAAIgC,GACfE,KAAM,CAAElC,GAAIiC,MACNR,GAAY,CAAEzB,GAAE,OAAEyB,QAAF,IAAEA,OAAF,EAAEA,EAAUzB","sources":["admin/pages/Vacancy/CreateVacancyPage.tsx"],"sourcesContent":["import { joiResolver } from '@hookform/resolvers/joi';\r\nimport dayjs from 'dayjs';\r\nimport { ReactElement, useEffect } from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport {\r\n  useGetJobAdAdminQuery,\r\n  useSaveJobAdMutation,\r\n} from '../../../GraphQl/graphql';\r\nimport { Accordion, FormActions } from '../../components/molecules';\r\nimport {\r\n  DescriptionFrom,\r\n  VacancyForm,\r\n  VacancyFormInputs,\r\n  VacancyTerminForm,\r\n} from '../../components/organisms';\r\nimport { gqlVar, twClsx } from '../../utils';\r\nimport { VacancyFormSchema } from '../../validations';\r\n\r\nconst CreateVacancyPage = (): ReactElement => {\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  const methods = useForm<VacancyFormInputs>({\r\n    resolver: joiResolver(VacancyFormSchema),\r\n    defaultValues: {\r\n      date: {\r\n        startDate: dayjs().format(),\r\n        dueDate: dayjs().add(7, 'day').format(),\r\n      },\r\n    },\r\n  });\r\n\r\n  const {\r\n    reset,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = methods;\r\n\r\n  const { data: { getJobAd = null } = {} } = useGetJobAdAdminQuery({\r\n    variables: { entity: { id } },\r\n    skip: !id,\r\n  });\r\n\r\n  const [saveJobAd] = useSaveJobAdMutation({\r\n    onCompleted: () => navigate('/admin/job-announcements'),\r\n  });\r\n\r\n  const handleOnSubmit = ({\r\n    description,\r\n    date: { dueDate, startDate },\r\n    baseData: { title, company, category },\r\n  }: VacancyFormInputs) => {\r\n    saveJobAd(\r\n      gqlVar({\r\n        title,\r\n        dueDate,\r\n        startDate,\r\n        content: description,\r\n        company: { id: company },\r\n        type: { id: category },\r\n        ...(!!getJobAd && { id: getJobAd?.id }),\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!!getJobAd) {\r\n      reset({\r\n        baseData: {\r\n          title: getJobAd?.title || '',\r\n          company: getJobAd?.company?.id || '',\r\n          category: getJobAd?.type?.id || '',\r\n        },\r\n        date: {\r\n          startDate: dayjs(getJobAd?.startDate).format(),\r\n          dueDate: dayjs(getJobAd?.dueDate).format(),\r\n        },\r\n        description: getJobAd?.content || '',\r\n      });\r\n    }\r\n  }, [getJobAd, reset]);\r\n\r\n  console.log(getJobAd);\r\n\r\n  return (\r\n    <FormProvider {...methods}>\r\n      <form className=\"min-h-full\">\r\n        <Accordion\r\n          title=\"Stammdaten\"\r\n          open={!!id}\r\n          className={twClsx(errors.baseData && 'border border-primary')}\r\n        >\r\n          <VacancyForm />\r\n        </Accordion>\r\n        <Accordion\r\n          title=\"Beschreibung\"\r\n          className={twClsx(errors.description && 'border border-primary')}\r\n        >\r\n          <DescriptionFrom />\r\n        </Accordion>\r\n        <Accordion\r\n          title=\"Termine\"\r\n          className={twClsx(errors.date && 'border border-primary')}\r\n        >\r\n          <VacancyTerminForm />\r\n        </Accordion>\r\n        <FormActions onSubmit={handleSubmit(handleOnSubmit)} />\r\n      </form>\r\n    </FormProvider>\r\n  );\r\n};\r\n\r\nexport default CreateVacancyPage;\r\n"],"names":["id","useParams","navigate","useNavigate","methods","useForm","resolver","joiResolver","VacancyFormSchema","defaultValues","date","startDate","dayjs","format","dueDate","add","reset","handleSubmit","errors","formState","useGetJobAdAdminQuery","variables","entity","skip","data","getJobAd","useSaveJobAdMutation","onCompleted","saveJobAd","useEffect","baseData","title","company","category","type","description","content","console","log","className","open","twClsx","onSubmit","gqlVar"],"sourceRoot":""}